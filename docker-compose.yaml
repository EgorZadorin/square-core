version: '3.1'

services:
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=dbpw
      - POSTGRES_USER=square
      - POSTGRES_DB=square
    volumes:
      - db-data:/var/lib/postgresql/data

  backend:
    image: ukpsquare/square-backend:latest
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - db
    volumes:
      - migrations-data:/app/migrations

  frontend:
    image: ukpsquare/square-frontend:latest
    restart: always
    ports:
      - 80:80

  ### Skills
  boolq_skill:
    image: ukpsquare/square-skills-boolq:latest
    build: ./skills/qa-boolq-skill/.
    ports:
      - 8003:8003
    env_file:
      - ./skills/qa-boolq-skill/.env
  squad_v2_skill:
    image: ukpsquare/square-skills-squad-v2:latest
    build: ./skills/qa-squad-v2-skill/.
    ports:
      - 8004:8004
    env_file:
      - ./skills/qa-squad-v2-skill/.env
  commonsense_qa_skill:
    image: ukpsquare/square-skills-commonsense-qa:latest
    build: ./skills/qa-commonsense-qa-skill/.
    ports:
      - 8005:8005
    env_file:
      - ./skills/qa-commonsense-qa-skill/.env
  extractive_qa_skill:
    image: ukpsquare/square-skills-extractive:latest
    build: ./skills/qa-extractive-qa-skill/.
    ports:
      - 8006:8006
    env_file:
      - ./skills/qa-extractive-qa-skill/.env
  multiple_choice_qa_skill:
    image: ukpsquare/square-skills-multiple-choice:latest
    build: ./skills/qa-extractive-qa-skill/.
    ports:
      - 8007:8007
    env_file:
      - ./skills/qa-multiple-choice-skill/.env
  naturalqa_retrieve_span_skill:
    image: ukpsquare/square-skills-retrieve-span:latest
    build: ./skills/qa-retrieve-span-skill/.
    ports:
      - 8777:8000
    env_file:
      - ./skills/qa-retrieve-span-skill/.env

  ### MODEL API
  model_auth:
    image: ukpsquare/square-model-api-auth:latest
    env_file:
      - square-model-inference-api/auth_server/.env

  model_nginx:
    image: nginx
    restart: always
    ports:
      - 8989:8080
    volumes:
      - ./square-model-inference-api/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  model_bert_adapter:
    image: ukpsquare/square-model-api:latest
    env_file:
      - ./square-model-inference-api/inference_server/.env.bert_adapter
    volumes:
      - ./.cache/:/etc/huggingface/.cache/

  model_dpr:
    image: ukpsquare/square-model-api:latest
    env_file:
      - ./square-model-inference-api/inference_server/.env.dpr
    volumes:
      - ./.cache/:/etc/huggingface/.cache/

  model_distilbert_st:
    image: ukpsquare/square-model-api:latest
    env_file:
      - ./square-model-inference-api/inference_server/.env.distilbert_sentence_transformer
    volumes:
      - ./.cache/:/etc/sentence-transformers/.cache/

  ### / MODEL API Finished

  skill_manager:
    image: ukpsquare/skill-manager:latest
    build: ./skill-manager
    ports:
      - 8008:8008
    env_file:
      - ./skill-manager/.env
    depends_on:
      - skill_manager_mongo

  skill_manager_mongo:
    image: mongo:5.0.4
    restart: always
    volumes:
      - skill-manager-mongo-data:/data/db
    ports:
      - 27017:27017
    env_file:
      - ./skill-manager/.env

  #adminer:
  #  image: adminer
  #  restart: always
  #  ports:
  #    - 8080:8080

  # es:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - es01:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

 ### DATASTORE API
  vespa:
    image: vespaengine/vespa
    container_name: vespa
    hostname: vespa-container
    privileged: true
    expose:
      - "8080"
      - "19071"
    ports:
      - "7070:8080"
    #  - "19071:19071"
    volumes:
      - ./storage/vespa/var:/opt/vespa/var
      - ./storage/vespa/logs:/opt/vespa/logs

  mongodb:
    image: mongo:4.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    #ports:
    #  - "27017:27017"
    volumes:
      - ./storage/db/data:/data/db

  datastore_api:
    privileged: true
    build: .
    depends_on:
      - vespa
      - mongodb
    ports:
      - "7000:7000"
    env_file:
      - ./.env

volumes:
  db-data:
    driver: local
  migrations-data:
    driver: local
  es01:
    driver: local
  skill-manager-mongo-data:
    driver: local
