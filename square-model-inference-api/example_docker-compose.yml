version: "3"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.file.filename=/config/traefik.yaml
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.http.middlewares=prefix-strip@file, auth@file, api-prefix@file
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yaml:/config/traefik.yaml

  maintaining:
    image: ukpsquare/square-model-deploying:latest
    build:
      ./deploying
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintaining.rule=PathPrefix(`/api/models`)"


  # Example config for one model server
  inference_dpr:
    #build: ./inference_server/.
    image: ukpsquare/square-model-api:latest
    # Portforwarding not needed
#    ports:
#      - 8000:8000
    env_file:
      - inference_server/.env.dpr
    volumes:
      - ./.cache/:/etc/huggingface/.cache/
      #- ./inference_server/:/app/ #for developement
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dpr.rule=PathPrefix(`/api/dpr`)"

    # Example config for another model server
  inference_bert:
    #build: ./inference_server/.
    image: ukpsquare/square-model-api:latest
    # Portforwarding not needed
    #    ports:
    #      - 8001:8000
    env_file:
      - ./inference_server/.env.bert_adapter
    volumes:
      - ./.cache/:/etc/huggingface/.cache/
      #- ./inference_server/:/app/ #for developement

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bert.rule=PathPrefix(`/api/bert`)"