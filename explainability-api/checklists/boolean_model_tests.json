{
    "qa_type": "categorical",
    "tests": [
        {
            "test_type": "MFT",
            "capability": "Vocabulary",
            "test_name": "A is COMP than B. Who is more / less COMP??",
            "test_name_description": "Compare person A and person B with different comparative adjective and test's models ability to understand the comparative words",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has necessary vocabulary and whether it has the ability to handle the importance of different words.",
            "test_cases": [
                {
                    "context": "Caroline is nicer than Marie.",
                    "question": "Is Caroline less nice?",
                    "answer": "no"
                },
                {
                    "context": "Caroline is nicer than Marie.",
                    "question": "Is Caroline nicer than Marie?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet is cleaner than Kelly.",
                    "question": "Is Harriet less clean?",
                    "answer": "no"
                },
                {
                    "context": "Harriet is cleaner than Kelly.",
                    "question": "Is Harriet cleaner than Kelly?",
                    "answer": "yes"
                },
                {
                    "context": "Keith is higher than Alice.",
                    "question": "Is Keith less high?",
                    "answer": "no"
                },
                {
                    "context": "Keith is higher than Alice.",
                    "question": "Is Keith higher than Alice?",
                    "answer": "yes"
                },
                {
                    "context": "Samuel is cleaner than Jean.",
                    "question": "Is Samuel less clean?",
                    "answer": "no"
                },
                {
                    "context": "Samuel is cleaner than Jean.",
                    "question": "Is Samuel cleaner than Jean?",
                    "answer": "yes"
                },
                {
                    "context": "Amanda is shorter than Eric.",
                    "question": "Is Amanda less short?",
                    "answer": "no"
                },
                {
                    "context": "Amanda is shorter than Eric.",
                    "question": "Is Amanda shorter than Eric?",
                    "answer": "yes"
                }
            ],
            "total_cases": 10
        },
        {
            "test_type": "MFT",
            "capability": "Vocabulary",
            "test_name": "Intensifiers (very, super, extremely) and reducers (somewhat, kinda, ",
            "test_name_description": "Test's model's ability to understand intensifiers(very, super, extremely) and reducers(somewhat, kinda)",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has necessary vocabulary and whether it has the ability to handle the importance of different words.",
            "test_cases": [
                {
                    "context": "Andrew is super upbeat about the project. Ian is upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Andrew is upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Andrew is upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Andrew is super upbeat about the project. Ian is a little upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Andrew the most upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Ian the least upbeat about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Ian the most upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Ian is a little upbeat about the project. Andrew is super upbeat about the project.",
                    "question": "Is Andrew the least upbeat about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Lawrence is really curious about the project. Fiona is a little curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Lawrence the most curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Fiona the least curious about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Fiona the most curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Fiona is a little curious about the project. Lawrence is really curious about the project.",
                    "question": "Is Lawrence the least curious about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Patricia is incredibly particular about the project. Edward is somewhat particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Patricia the most particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Edward the least particular about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Edward the most particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Edward is somewhat particular about the project. Patricia is incredibly particular about the project.",
                    "question": "Is Patricia the least particular about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is super positive about the project. Mike is positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is super positive about the project. Mike is positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is super positive about the project. Mike is positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is super positive about the project. Mike is positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is positive about the project. Sam is super positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is positive about the project. Sam is super positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is positive about the project. Sam is super positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is positive about the project. Sam is super positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is super positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is super positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Sam is super positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Sam is super positive about the project. Mike is somewhat positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is super positive about the project.",
                    "question": "Is Sam the most positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is super positive about the project.",
                    "question": "Is Mike the least positive about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is super positive about the project.",
                    "question": "Is Mike the most positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mike is somewhat positive about the project. Sam is super positive about the project.",
                    "question": "Is Sam the least positive about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is quite open about the project. Don is open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is quite open about the project. Don is open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is quite open about the project. Don is open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is quite open about the project. Don is open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is open about the project. Mary is quite open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is open about the project. Mary is quite open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is open about the project. Mary is quite open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is open about the project. Mary is quite open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is open about the project. Don is slightly open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is open about the project. Don is slightly open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is open about the project. Don is slightly open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is open about the project. Don is slightly open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is slightly open about the project. Mary is open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is slightly open about the project. Mary is open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is slightly open about the project. Mary is open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is slightly open about the project. Mary is open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is quite open about the project. Don is slightly open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is quite open about the project. Don is slightly open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Mary is quite open about the project. Don is slightly open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Mary is quite open about the project. Don is slightly open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is slightly open about the project. Mary is quite open about the project.",
                    "question": "Is Mary the most open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is slightly open about the project. Mary is quite open about the project.",
                    "question": "Is Don the least open about the project?",
                    "answer": "yes"
                },
                {
                    "context": "Don is slightly open about the project. Mary is quite open about the project.",
                    "question": "Is Don the most open about the project?",
                    "answer": "no"
                },
                {
                    "context": "Don is slightly open about the project. Mary is quite open about the project.",
                    "question": "Is Mary the least open about the project?",
                    "answer": "no"
                }
            ],
            "total_cases": 120
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "size, shape, age, color",
            "test_name_description": "Test's model's ability to understand size, shape, age, color",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "There is a tiny blue painting in the room.",
                    "question": "Is the size of the painting tiny?",
                    "answer": "yes"
                },
                {
                    "context": "There is a tiny blue painting in the room.",
                    "question": "Is the color of the painting blue?",
                    "answer": "yes"
                },
                {
                    "context": "There is a tiny blue painting in the room.",
                    "question": "size of the painting is not tiny, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a tiny blue painting in the room.",
                    "question": "color of the painting is not blue, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a painting in the room. The painting is tiny and blue.",
                    "question": "Is the size of the painting tiny?",
                    "answer": "yes"
                },
                {
                    "context": "There is a painting in the room. The painting is tiny and blue.",
                    "question": "Is the color of the painting blue?",
                    "answer": "yes"
                },
                {
                    "context": "There is a painting in the room. The painting is tiny and blue.",
                    "question": "size of the painting is not tiny, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a painting in the room. The painting is tiny and blue.",
                    "question": "color of the painting is not blue, right?",
                    "answer": "no"
                },
                {
                    "context": "There is an old orange toy in the room.",
                    "question": "Is the age of the toy old?",
                    "answer": "yes"
                },
                {
                    "context": "There is an old orange toy in the room.",
                    "question": "Is the color of the toy orange?",
                    "answer": "yes"
                },
                {
                    "context": "There is an old orange toy in the room.",
                    "question": "age of the toy is not old, right?",
                    "answer": "no"
                },
                {
                    "context": "There is an old orange toy in the room.",
                    "question": "color of the toy is not orange, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is old and orange.",
                    "question": "Is the age of the toy old?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is old and orange.",
                    "question": "Is the color of the toy orange?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is old and orange.",
                    "question": "age of the toy is not old, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is old and orange.",
                    "question": "color of the toy is not orange, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a new red toy in the room.",
                    "question": "Is the age of the toy new?",
                    "answer": "yes"
                },
                {
                    "context": "There is a new red toy in the room.",
                    "question": "Is the color of the toy red?",
                    "answer": "yes"
                },
                {
                    "context": "There is a new red toy in the room.",
                    "question": "age of the toy is not new, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a new red toy in the room.",
                    "question": "color of the toy is not red, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is new and red.",
                    "question": "Is the age of the toy new?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is new and red.",
                    "question": "Is the color of the toy red?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is new and red.",
                    "question": "age of the toy is not new, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is new and red.",
                    "question": "color of the toy is not red, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a square yellow sculpture in the room.",
                    "question": "Is the shape of the sculpture square?",
                    "answer": "yes"
                },
                {
                    "context": "There is a square yellow sculpture in the room.",
                    "question": "Is the color of the sculpture yellow?",
                    "answer": "yes"
                },
                {
                    "context": "There is a square yellow sculpture in the room.",
                    "question": "shape of the sculpture is not square, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a square yellow sculpture in the room.",
                    "question": "color of the sculpture is not yellow, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a sculpture in the room. The sculpture is square and yellow.",
                    "question": "Is the shape of the sculpture square?",
                    "answer": "yes"
                },
                {
                    "context": "There is a sculpture in the room. The sculpture is square and yellow.",
                    "question": "Is the color of the sculpture yellow?",
                    "answer": "yes"
                },
                {
                    "context": "There is a sculpture in the room. The sculpture is square and yellow.",
                    "question": "shape of the sculpture is not square, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a sculpture in the room. The sculpture is square and yellow.",
                    "question": "color of the sculpture is not yellow, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a round yellow toy in the room.",
                    "question": "Is the shape of the toy round?",
                    "answer": "yes"
                },
                {
                    "context": "There is a round yellow toy in the room.",
                    "question": "Is the color of the toy yellow?",
                    "answer": "yes"
                },
                {
                    "context": "There is a round yellow toy in the room.",
                    "question": "shape of the toy is not round, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a round yellow toy in the room.",
                    "question": "color of the toy is not yellow, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is round and yellow.",
                    "question": "Is the shape of the toy round?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is round and yellow.",
                    "question": "Is the color of the toy yellow?",
                    "answer": "yes"
                },
                {
                    "context": "There is a toy in the room. The toy is round and yellow.",
                    "question": "shape of the toy is not round, right?",
                    "answer": "no"
                },
                {
                    "context": "There is a toy in the room. The toy is round and yellow.",
                    "question": "color of the toy is not yellow, right?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "Profession vs nationality",
            "test_name_description": "Test's model's ability to understand profession and nationality",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Daniel is an Indonesian academic.",
                    "question": "Is Daniel an academic?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an Indonesian academic.",
                    "question": "Is Daniel Indonesian?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an Indonesian academic.",
                    "question": "Daniel is not an academic, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is an Indonesian academic.",
                    "question": "Daniel is not Indonesian, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is an academic. Daniel is Indonesian.",
                    "question": "Is Daniel an academic?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an academic. Daniel is Indonesian.",
                    "question": "Is Daniel Indonesian?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an academic. Daniel is Indonesian.",
                    "question": "Daniel is not an academic, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is an academic. Daniel is Indonesian.",
                    "question": "Daniel is not Indonesian, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is Indonesian. Daniel is an academic.",
                    "question": "Is Daniel an academic?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is Indonesian. Daniel is an academic.",
                    "question": "Is Daniel Indonesian?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is Indonesian. Daniel is an academic.",
                    "question": "Daniel is not an academic, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is Indonesian. Daniel is an academic.",
                    "question": "Daniel is not Indonesian, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is Indonesian and an academic.",
                    "question": "Is Daniel an academic?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is Indonesian and an academic.",
                    "question": "Is Daniel Indonesian?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is Indonesian and an academic.",
                    "question": "Daniel is not an academic, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is Indonesian and an academic.",
                    "question": "Daniel is not Indonesian, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is an academic and Indonesian.",
                    "question": "Is Daniel an academic?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an academic and Indonesian.",
                    "question": "Is Daniel Indonesian?",
                    "answer": "yes"
                },
                {
                    "context": "Daniel is an academic and Indonesian.",
                    "question": "Daniel is not an academic, right?",
                    "answer": "no"
                },
                {
                    "context": "Daniel is an academic and Indonesian.",
                    "question": "Daniel is not Indonesian, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is a Pakistani escort.",
                    "question": "Is Robin an escort?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is a Pakistani escort.",
                    "question": "Is Robin Pakistani?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is a Pakistani escort.",
                    "question": "Robin is not an escort, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is a Pakistani escort.",
                    "question": "Robin is not Pakistani, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is an escort. Robin is Pakistani.",
                    "question": "Is Robin an escort?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is an escort. Robin is Pakistani.",
                    "question": "Is Robin Pakistani?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is an escort. Robin is Pakistani.",
                    "question": "Robin is not an escort, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is an escort. Robin is Pakistani.",
                    "question": "Robin is not Pakistani, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is Pakistani. Robin is an escort.",
                    "question": "Is Robin an escort?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is Pakistani. Robin is an escort.",
                    "question": "Is Robin Pakistani?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is Pakistani. Robin is an escort.",
                    "question": "Robin is not an escort, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is Pakistani. Robin is an escort.",
                    "question": "Robin is not Pakistani, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is Pakistani and an escort.",
                    "question": "Is Robin an escort?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is Pakistani and an escort.",
                    "question": "Is Robin Pakistani?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is Pakistani and an escort.",
                    "question": "Robin is not an escort, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is Pakistani and an escort.",
                    "question": "Robin is not Pakistani, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is an escort and Pakistani.",
                    "question": "Is Robin an escort?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is an escort and Pakistani.",
                    "question": "Is Robin Pakistani?",
                    "answer": "yes"
                },
                {
                    "context": "Robin is an escort and Pakistani.",
                    "question": "Robin is not an escort, right?",
                    "answer": "no"
                },
                {
                    "context": "Robin is an escort and Pakistani.",
                    "question": "Robin is not Pakistani, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is an Indian journalist.",
                    "question": "Is Bill a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is an Indian journalist.",
                    "question": "Is Bill Indian?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is an Indian journalist.",
                    "question": "Bill is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is an Indian journalist.",
                    "question": "Bill is not Indian, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is a journalist. Bill is Indian.",
                    "question": "Is Bill a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is a journalist. Bill is Indian.",
                    "question": "Is Bill Indian?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is a journalist. Bill is Indian.",
                    "question": "Bill is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is a journalist. Bill is Indian.",
                    "question": "Bill is not Indian, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is Indian. Bill is a journalist.",
                    "question": "Is Bill a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is Indian. Bill is a journalist.",
                    "question": "Is Bill Indian?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is Indian. Bill is a journalist.",
                    "question": "Bill is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is Indian. Bill is a journalist.",
                    "question": "Bill is not Indian, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is Indian and a journalist.",
                    "question": "Is Bill a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is Indian and a journalist.",
                    "question": "Is Bill Indian?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is Indian and a journalist.",
                    "question": "Bill is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is Indian and a journalist.",
                    "question": "Bill is not Indian, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is a journalist and Indian.",
                    "question": "Is Bill a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is a journalist and Indian.",
                    "question": "Is Bill Indian?",
                    "answer": "yes"
                },
                {
                    "context": "Bill is a journalist and Indian.",
                    "question": "Bill is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Bill is a journalist and Indian.",
                    "question": "Bill is not Indian, right?",
                    "answer": "no"
                },
                {
                    "context": "George is an American DJ.",
                    "question": "Is George a DJ?",
                    "answer": "yes"
                },
                {
                    "context": "George is an American DJ.",
                    "question": "Is George American?",
                    "answer": "yes"
                },
                {
                    "context": "George is an American DJ.",
                    "question": "George is not a DJ, right?",
                    "answer": "no"
                },
                {
                    "context": "George is an American DJ.",
                    "question": "George is not American, right?",
                    "answer": "no"
                },
                {
                    "context": "George is a DJ. George is American.",
                    "question": "Is George a DJ?",
                    "answer": "yes"
                },
                {
                    "context": "George is a DJ. George is American.",
                    "question": "Is George American?",
                    "answer": "yes"
                },
                {
                    "context": "George is a DJ. George is American.",
                    "question": "George is not a DJ, right?",
                    "answer": "no"
                },
                {
                    "context": "George is a DJ. George is American.",
                    "question": "George is not American, right?",
                    "answer": "no"
                },
                {
                    "context": "George is American. George is a DJ.",
                    "question": "Is George a DJ?",
                    "answer": "yes"
                },
                {
                    "context": "George is American. George is a DJ.",
                    "question": "Is George American?",
                    "answer": "yes"
                },
                {
                    "context": "George is American. George is a DJ.",
                    "question": "George is not a DJ, right?",
                    "answer": "no"
                },
                {
                    "context": "George is American. George is a DJ.",
                    "question": "George is not American, right?",
                    "answer": "no"
                },
                {
                    "context": "George is American and a DJ.",
                    "question": "Is George a DJ?",
                    "answer": "yes"
                },
                {
                    "context": "George is American and a DJ.",
                    "question": "Is George American?",
                    "answer": "yes"
                },
                {
                    "context": "George is American and a DJ.",
                    "question": "George is not a DJ, right?",
                    "answer": "no"
                },
                {
                    "context": "George is American and a DJ.",
                    "question": "George is not American, right?",
                    "answer": "no"
                },
                {
                    "context": "George is a DJ and American.",
                    "question": "Is George a DJ?",
                    "answer": "yes"
                },
                {
                    "context": "George is a DJ and American.",
                    "question": "Is George American?",
                    "answer": "yes"
                },
                {
                    "context": "George is a DJ and American.",
                    "question": "George is not a DJ, right?",
                    "answer": "no"
                },
                {
                    "context": "George is a DJ and American.",
                    "question": "George is not American, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a Japanese secretary.",
                    "question": "Is Francis a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a Japanese secretary.",
                    "question": "Is Francis Japanese?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a Japanese secretary.",
                    "question": "Francis is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a Japanese secretary.",
                    "question": "Francis is not Japanese, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a secretary. Francis is Japanese.",
                    "question": "Is Francis a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a secretary. Francis is Japanese.",
                    "question": "Is Francis Japanese?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a secretary. Francis is Japanese.",
                    "question": "Francis is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a secretary. Francis is Japanese.",
                    "question": "Francis is not Japanese, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is Japanese. Francis is a secretary.",
                    "question": "Is Francis a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is Japanese. Francis is a secretary.",
                    "question": "Is Francis Japanese?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is Japanese. Francis is a secretary.",
                    "question": "Francis is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is Japanese. Francis is a secretary.",
                    "question": "Francis is not Japanese, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is Japanese and a secretary.",
                    "question": "Is Francis a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is Japanese and a secretary.",
                    "question": "Is Francis Japanese?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is Japanese and a secretary.",
                    "question": "Francis is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is Japanese and a secretary.",
                    "question": "Francis is not Japanese, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a secretary and Japanese.",
                    "question": "Is Francis a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a secretary and Japanese.",
                    "question": "Is Francis Japanese?",
                    "answer": "yes"
                },
                {
                    "context": "Francis is a secretary and Japanese.",
                    "question": "Francis is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Francis is a secretary and Japanese.",
                    "question": "Francis is not Japanese, right?",
                    "answer": "no"
                }
            ],
            "total_cases": 100
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "Animal vs Vehicle",
            "test_name_description": "Test's model's ability to understand different animals and vehicles.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Howard has a guinea pig and a SUV.",
                    "question": "Does Howard have a SUV?",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a guinea pig and a SUV.",
                    "question": "Does Howard have a guinea pig",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a guinea pig and a SUV.",
                    "question": "Does Howard have a SUV and a guinea pig?",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a guinea pig and a SUV.",
                    "question": "Howard has a guinea pig but not a SUV, right?",
                    "answer": "no"
                },
                {
                    "context": "Howard has a SUV and a guinea pig.",
                    "question": "Does Howard have a SUV?",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a SUV and a guinea pig.",
                    "question": "Does Howard have a guinea pig",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a SUV and a guinea pig.",
                    "question": "Does Howard have a SUV and a guinea pig?",
                    "answer": "yes"
                },
                {
                    "context": "Howard has a SUV and a guinea pig.",
                    "question": "Howard has a guinea pig but not a SUV, right?",
                    "answer": "no"
                },
                {
                    "context": "Don has a cow and a train.",
                    "question": "Does Don have a train?",
                    "answer": "yes"
                },
                {
                    "context": "Don has a cow and a train.",
                    "question": "Does Don have a cow",
                    "answer": "yes"
                },
                {
                    "context": "Don has a cow and a train.",
                    "question": "Does Don have a train and a cow?",
                    "answer": "yes"
                },
                {
                    "context": "Don has a cow and a train.",
                    "question": "Don has a cow but not a train, right?",
                    "answer": "no"
                },
                {
                    "context": "Don has a train and a cow.",
                    "question": "Does Don have a train?",
                    "answer": "yes"
                },
                {
                    "context": "Don has a train and a cow.",
                    "question": "Does Don have a cow",
                    "answer": "yes"
                },
                {
                    "context": "Don has a train and a cow.",
                    "question": "Does Don have a train and a cow?",
                    "answer": "yes"
                },
                {
                    "context": "Don has a train and a cow.",
                    "question": "Don has a cow but not a train, right?",
                    "answer": "no"
                },
                {
                    "context": "Tom has a hamster and a motorcycle.",
                    "question": "Does Tom have a motorcycle?",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a hamster and a motorcycle.",
                    "question": "Does Tom have a hamster",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a hamster and a motorcycle.",
                    "question": "Does Tom have a motorcycle and a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a hamster and a motorcycle.",
                    "question": "Tom has a hamster but not a motorcycle, right?",
                    "answer": "no"
                },
                {
                    "context": "Tom has a motorcycle and a hamster.",
                    "question": "Does Tom have a motorcycle?",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a motorcycle and a hamster.",
                    "question": "Does Tom have a hamster",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a motorcycle and a hamster.",
                    "question": "Does Tom have a motorcycle and a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Tom has a motorcycle and a hamster.",
                    "question": "Tom has a hamster but not a motorcycle, right?",
                    "answer": "no"
                },
                {
                    "context": "Ann has a duck and a car.",
                    "question": "Does Ann have a car?",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a duck and a car.",
                    "question": "Does Ann have a duck",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a duck and a car.",
                    "question": "Does Ann have a car and a duck?",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a duck and a car.",
                    "question": "Ann has a duck but not a car, right?",
                    "answer": "no"
                },
                {
                    "context": "Ann has a car and a duck.",
                    "question": "Does Ann have a car?",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a car and a duck.",
                    "question": "Does Ann have a duck",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a car and a duck.",
                    "question": "Does Ann have a car and a duck?",
                    "answer": "yes"
                },
                {
                    "context": "Ann has a car and a duck.",
                    "question": "Ann has a duck but not a car, right?",
                    "answer": "no"
                },
                {
                    "context": "Ryan has a hamster and a car.",
                    "question": "Does Ryan have a car?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a hamster and a car.",
                    "question": "Does Ryan have a hamster",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a hamster and a car.",
                    "question": "Does Ryan have a car and a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a hamster and a car.",
                    "question": "Ryan has a hamster but not a car, right?",
                    "answer": "no"
                },
                {
                    "context": "Ryan has a car and a hamster.",
                    "question": "Does Ryan have a car?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a car and a hamster.",
                    "question": "Does Ryan have a hamster",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a car and a hamster.",
                    "question": "Does Ryan have a car and a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan has a car and a hamster.",
                    "question": "Ryan has a hamster but not a car, right?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "Animal vs Vehicle v2",
            "test_name_description": "Test's model's ability to understand different animals and vehicles.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Jack bought a guinea pig. Rebecca bought a SUV.",
                    "question": "Did Jack buy a guinea pig?",
                    "answer": "yes"
                },
                {
                    "context": "Jack bought a guinea pig. Rebecca bought a SUV.",
                    "question": "Did Rebecca buy a SUV?",
                    "answer": "yes"
                },
                {
                    "context": "Jack bought a guinea pig. Rebecca bought a SUV.",
                    "question": "Did Rebecca buy a guinea pig?",
                    "answer": "no"
                },
                {
                    "context": "Jack bought a guinea pig. Rebecca bought a SUV.",
                    "question": "Did Jack buy a SUV?",
                    "answer": "no"
                },
                {
                    "context": "Rebecca bought a SUV. Jack bought a guinea pig.",
                    "question": "Did Jack buy a guinea pig?",
                    "answer": "yes"
                },
                {
                    "context": "Rebecca bought a SUV. Jack bought a guinea pig.",
                    "question": "Did Rebecca buy a SUV?",
                    "answer": "yes"
                },
                {
                    "context": "Rebecca bought a SUV. Jack bought a guinea pig.",
                    "question": "Did Rebecca buy a guinea pig?",
                    "answer": "no"
                },
                {
                    "context": "Rebecca bought a SUV. Jack bought a guinea pig.",
                    "question": "Did Jack buy a SUV?",
                    "answer": "no"
                },
                {
                    "context": "Eric bought a bull. Michael bought a train.",
                    "question": "Did Eric buy a bull?",
                    "answer": "yes"
                },
                {
                    "context": "Eric bought a bull. Michael bought a train.",
                    "question": "Did Michael buy a train?",
                    "answer": "yes"
                },
                {
                    "context": "Eric bought a bull. Michael bought a train.",
                    "question": "Did Michael buy a bull?",
                    "answer": "no"
                },
                {
                    "context": "Eric bought a bull. Michael bought a train.",
                    "question": "Did Eric buy a train?",
                    "answer": "no"
                },
                {
                    "context": "Michael bought a train. Eric bought a bull.",
                    "question": "Did Eric buy a bull?",
                    "answer": "yes"
                },
                {
                    "context": "Michael bought a train. Eric bought a bull.",
                    "question": "Did Michael buy a train?",
                    "answer": "yes"
                },
                {
                    "context": "Michael bought a train. Eric bought a bull.",
                    "question": "Did Michael buy a bull?",
                    "answer": "no"
                },
                {
                    "context": "Michael bought a train. Eric bought a bull.",
                    "question": "Did Eric buy a train?",
                    "answer": "no"
                },
                {
                    "context": "Ann bought a hamster. Donald bought a motorcycle.",
                    "question": "Did Ann buy a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Ann bought a hamster. Donald bought a motorcycle.",
                    "question": "Did Donald buy a motorcycle?",
                    "answer": "yes"
                },
                {
                    "context": "Ann bought a hamster. Donald bought a motorcycle.",
                    "question": "Did Donald buy a hamster?",
                    "answer": "no"
                },
                {
                    "context": "Ann bought a hamster. Donald bought a motorcycle.",
                    "question": "Did Ann buy a motorcycle?",
                    "answer": "no"
                },
                {
                    "context": "Donald bought a motorcycle. Ann bought a hamster.",
                    "question": "Did Ann buy a hamster?",
                    "answer": "yes"
                },
                {
                    "context": "Donald bought a motorcycle. Ann bought a hamster.",
                    "question": "Did Donald buy a motorcycle?",
                    "answer": "yes"
                },
                {
                    "context": "Donald bought a motorcycle. Ann bought a hamster.",
                    "question": "Did Donald buy a hamster?",
                    "answer": "no"
                },
                {
                    "context": "Donald bought a motorcycle. Ann bought a hamster.",
                    "question": "Did Ann buy a motorcycle?",
                    "answer": "no"
                },
                {
                    "context": "Betty bought a fish. James bought a train.",
                    "question": "Did Betty buy a fish?",
                    "answer": "yes"
                },
                {
                    "context": "Betty bought a fish. James bought a train.",
                    "question": "Did James buy a train?",
                    "answer": "yes"
                },
                {
                    "context": "Betty bought a fish. James bought a train.",
                    "question": "Did James buy a fish?",
                    "answer": "no"
                },
                {
                    "context": "Betty bought a fish. James bought a train.",
                    "question": "Did Betty buy a train?",
                    "answer": "no"
                },
                {
                    "context": "James bought a train. Betty bought a fish.",
                    "question": "Did Betty buy a fish?",
                    "answer": "yes"
                },
                {
                    "context": "James bought a train. Betty bought a fish.",
                    "question": "Did James buy a train?",
                    "answer": "yes"
                },
                {
                    "context": "James bought a train. Betty bought a fish.",
                    "question": "Did James buy a fish?",
                    "answer": "no"
                },
                {
                    "context": "James bought a train. Betty bought a fish.",
                    "question": "Did Betty buy a train?",
                    "answer": "no"
                },
                {
                    "context": "Eric bought a cow. Marilyn bought a car.",
                    "question": "Did Eric buy a cow?",
                    "answer": "yes"
                },
                {
                    "context": "Eric bought a cow. Marilyn bought a car.",
                    "question": "Did Marilyn buy a car?",
                    "answer": "yes"
                },
                {
                    "context": "Eric bought a cow. Marilyn bought a car.",
                    "question": "Did Marilyn buy a cow?",
                    "answer": "no"
                },
                {
                    "context": "Eric bought a cow. Marilyn bought a car.",
                    "question": "Did Eric buy a car?",
                    "answer": "no"
                },
                {
                    "context": "Marilyn bought a car. Eric bought a cow.",
                    "question": "Did Eric buy a cow?",
                    "answer": "yes"
                },
                {
                    "context": "Marilyn bought a car. Eric bought a cow.",
                    "question": "Did Marilyn buy a car?",
                    "answer": "yes"
                },
                {
                    "context": "Marilyn bought a car. Eric bought a cow.",
                    "question": "Did Marilyn buy a cow?",
                    "answer": "no"
                },
                {
                    "context": "Marilyn bought a car. Eric bought a cow.",
                    "question": "Did Eric buy a car?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "Synonyms",
            "test_name_description": "Test's model's ability to understand synonyms.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Roy is very intelligent. Wendy is very humble.",
                    "question": "Is Roy smart?",
                    "answer": "yes"
                },
                {
                    "context": "Roy is very intelligent. Wendy is very humble.",
                    "question": "Is Wendy smart?",
                    "answer": "yes"
                },
                {
                    "context": "Wendy is very humble. Roy is very intelligent.",
                    "question": "Is Roy smart?",
                    "answer": "yes"
                },
                {
                    "context": "Wendy is very humble. Roy is very intelligent.",
                    "question": "Is Wendy smart?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin is very spiritual. Katherine is very happy.",
                    "question": "Is Kevin religious?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin is very spiritual. Katherine is very happy.",
                    "question": "Is Katherine religious?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine is very happy. Kevin is very spiritual.",
                    "question": "Is Kevin religious?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine is very happy. Kevin is very spiritual.",
                    "question": "Is Katherine religious?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is very scared. Alexandra is very spiritual.",
                    "question": "Is Patricia frightened?",
                    "answer": "yes"
                },
                {
                    "context": "Patricia is very scared. Alexandra is very spiritual.",
                    "question": "Is Alexandra frightened?",
                    "answer": "yes"
                },
                {
                    "context": "Alexandra is very spiritual. Patricia is very scared.",
                    "question": "Is Patricia frightened?",
                    "answer": "yes"
                },
                {
                    "context": "Alexandra is very spiritual. Patricia is very scared.",
                    "question": "Is Alexandra frightened?",
                    "answer": "yes"
                },
                {
                    "context": "Helen is very humble. Dave is very happy.",
                    "question": "Is Helen modest?",
                    "answer": "yes"
                },
                {
                    "context": "Helen is very humble. Dave is very happy.",
                    "question": "Is Dave modest?",
                    "answer": "yes"
                },
                {
                    "context": "Dave is very happy. Helen is very humble.",
                    "question": "Is Helen modest?",
                    "answer": "yes"
                },
                {
                    "context": "Dave is very happy. Helen is very humble.",
                    "question": "Is Dave modest?",
                    "answer": "yes"
                },
                {
                    "context": "Elizabeth is very joyful. Jonathan is very brave.",
                    "question": "Is Elizabeth is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Elizabeth is very joyful. Jonathan is very brave.",
                    "question": "Is Jonathan is courageous?",
                    "answer": "yes"
                },
                {
                    "context": "Jonathan is very brave. Elizabeth is very joyful.",
                    "question": "Is Elizabeth is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Jonathan is very brave. Elizabeth is very joyful.",
                    "question": "Is Jonathan is courageous?",
                    "answer": "yes"
                },
                {
                    "context": "Dorothy is very modest. Arthur is very joyful.",
                    "question": "Is Dorothy is humble?",
                    "answer": "yes"
                },
                {
                    "context": "Dorothy is very modest. Arthur is very joyful.",
                    "question": "Is Arthur is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Arthur is very joyful. Dorothy is very modest.",
                    "question": "Is Dorothy is humble?",
                    "answer": "yes"
                },
                {
                    "context": "Arthur is very joyful. Dorothy is very modest.",
                    "question": "Is Arthur is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Elaine is very modest. Sue is very joyful.",
                    "question": "Is Elaine is humble?",
                    "answer": "yes"
                },
                {
                    "context": "Elaine is very modest. Sue is very joyful.",
                    "question": "Is Sue is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Sue is very joyful. Elaine is very modest.",
                    "question": "Is Elaine is humble?",
                    "answer": "yes"
                },
                {
                    "context": "Sue is very joyful. Elaine is very modest.",
                    "question": "Is Sue is happy?",
                    "answer": "yes"
                },
                {
                    "context": "Emily is very furious. Janet is very organised.",
                    "question": "Is Emily is angry?",
                    "answer": "yes"
                },
                {
                    "context": "Emily is very furious. Janet is very organised.",
                    "question": "Is Janet is organized?",
                    "answer": "yes"
                },
                {
                    "context": "Janet is very organised. Emily is very furious.",
                    "question": "Is Emily is angry?",
                    "answer": "yes"
                },
                {
                    "context": "Janet is very organised. Emily is very furious.",
                    "question": "Is Janet is organized?",
                    "answer": "yes"
                }
            ],
            "total_cases": 32
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "A is COMP than B. Who is antonym(COMP)? B",
            "test_name_description": "Compare person A and person B with different comparative adjective and test's model's ability to understand different comparative adjective and their antonyms",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Kelly is warmer than Mark.",
                    "question": "Is Kelly warmer than Mark?",
                    "answer": "yes"
                },
                {
                    "context": "Kelly is warmer than Mark.",
                    "question": "Is Mark colder than Kelly?",
                    "answer": "yes"
                },
                {
                    "context": "Kelly is warmer than Mark.",
                    "question": "Is Mark warmer than Kelly?",
                    "answer": "no"
                },
                {
                    "context": "Kelly is warmer than Mark.",
                    "question": "Is Kelly colder than Mark?",
                    "answer": "no"
                },
                {
                    "context": "Mark is colder than Kelly.",
                    "question": "Is Kelly warmer than Mark?",
                    "answer": "yes"
                },
                {
                    "context": "Mark is colder than Kelly.",
                    "question": "Is Mark colder than Kelly?",
                    "answer": "yes"
                },
                {
                    "context": "Mark is colder than Kelly.",
                    "question": "Is Mark warmer than Kelly?",
                    "answer": "no"
                },
                {
                    "context": "Mark is colder than Kelly.",
                    "question": "Is Kelly colder than Mark?",
                    "answer": "no"
                },
                {
                    "context": "Sue is better than Barbara.",
                    "question": "Is Sue better than Barbara?",
                    "answer": "yes"
                },
                {
                    "context": "Sue is better than Barbara.",
                    "question": "Is Barbara worse than Sue?",
                    "answer": "yes"
                },
                {
                    "context": "Sue is better than Barbara.",
                    "question": "Is Barbara better than Sue?",
                    "answer": "no"
                },
                {
                    "context": "Sue is better than Barbara.",
                    "question": "Is Sue worse than Barbara?",
                    "answer": "no"
                },
                {
                    "context": "Barbara is worse than Sue.",
                    "question": "Is Sue better than Barbara?",
                    "answer": "yes"
                },
                {
                    "context": "Barbara is worse than Sue.",
                    "question": "Is Barbara worse than Sue?",
                    "answer": "yes"
                },
                {
                    "context": "Barbara is worse than Sue.",
                    "question": "Is Barbara better than Sue?",
                    "answer": "no"
                },
                {
                    "context": "Barbara is worse than Sue.",
                    "question": "Is Sue worse than Barbara?",
                    "answer": "no"
                },
                {
                    "context": "Steven is darker than Dave.",
                    "question": "Is Steven darker than Dave?",
                    "answer": "yes"
                },
                {
                    "context": "Steven is darker than Dave.",
                    "question": "Is Dave lighter than Steven?",
                    "answer": "yes"
                },
                {
                    "context": "Steven is darker than Dave.",
                    "question": "Is Dave darker than Steven?",
                    "answer": "no"
                },
                {
                    "context": "Steven is darker than Dave.",
                    "question": "Is Steven lighter than Dave?",
                    "answer": "no"
                },
                {
                    "context": "Dave is lighter than Steven.",
                    "question": "Is Steven darker than Dave?",
                    "answer": "yes"
                },
                {
                    "context": "Dave is lighter than Steven.",
                    "question": "Is Dave lighter than Steven?",
                    "answer": "yes"
                },
                {
                    "context": "Dave is lighter than Steven.",
                    "question": "Is Dave darker than Steven?",
                    "answer": "no"
                },
                {
                    "context": "Dave is lighter than Steven.",
                    "question": "Is Steven lighter than Dave?",
                    "answer": "no"
                },
                {
                    "context": "Florence is richer than Bruce.",
                    "question": "Is Florence richer than Bruce?",
                    "answer": "yes"
                },
                {
                    "context": "Florence is richer than Bruce.",
                    "question": "Is Bruce poorer than Florence?",
                    "answer": "yes"
                },
                {
                    "context": "Florence is richer than Bruce.",
                    "question": "Is Bruce richer than Florence?",
                    "answer": "no"
                },
                {
                    "context": "Florence is richer than Bruce.",
                    "question": "Is Florence poorer than Bruce?",
                    "answer": "no"
                },
                {
                    "context": "Bruce is poorer than Florence.",
                    "question": "Is Florence richer than Bruce?",
                    "answer": "yes"
                },
                {
                    "context": "Bruce is poorer than Florence.",
                    "question": "Is Bruce poorer than Florence?",
                    "answer": "yes"
                },
                {
                    "context": "Bruce is poorer than Florence.",
                    "question": "Is Bruce richer than Florence?",
                    "answer": "no"
                },
                {
                    "context": "Bruce is poorer than Florence.",
                    "question": "Is Florence poorer than Bruce?",
                    "answer": "no"
                },
                {
                    "context": "William is older than Howard.",
                    "question": "Is William older than Howard?",
                    "answer": "yes"
                },
                {
                    "context": "William is older than Howard.",
                    "question": "Is Howard younger than William?",
                    "answer": "yes"
                },
                {
                    "context": "William is older than Howard.",
                    "question": "Is Howard older than William?",
                    "answer": "no"
                },
                {
                    "context": "William is older than Howard.",
                    "question": "Is William younger than Howard?",
                    "answer": "no"
                },
                {
                    "context": "Howard is younger than William.",
                    "question": "Is William older than Howard?",
                    "answer": "yes"
                },
                {
                    "context": "Howard is younger than William.",
                    "question": "Is Howard younger than William?",
                    "answer": "yes"
                },
                {
                    "context": "Howard is younger than William.",
                    "question": "Is Howard older than William?",
                    "answer": "no"
                },
                {
                    "context": "Howard is younger than William.",
                    "question": "Is William younger than Howard?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Taxonomy",
            "test_name": "A is more X than B. Who is more antonym(X)? B. Who is less X? B. Who is more X? A. Who is less antonym(X)? A.",
            "test_name_description": "Compare person A and person B with different comparative adjective and test's model's ability to understand different comparative adjective and their antonyms",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability tests whether a model has the ability to handle synonyms, antonyms, object size, shape, profession etc.",
            "test_cases": [
                {
                    "context": "Nancy is more defensive than Emma.",
                    "question": "Is Nancy more defensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Nancy is more defensive than Emma.",
                    "question": "Is Emma more defensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Nancy is more defensive than Emma.",
                    "question": "Is Nancy less offensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Nancy is more defensive than Emma.",
                    "question": "Is Emma less offensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Emma is more offensive than Nancy.",
                    "question": "Is Nancy more defensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Emma is more offensive than Nancy.",
                    "question": "Is Emma more defensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Emma is more offensive than Nancy.",
                    "question": "Is Nancy less offensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Emma is more offensive than Nancy.",
                    "question": "Is Emma less offensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Nancy is less offensive than Emma.",
                    "question": "Is Nancy more defensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Nancy is less offensive than Emma.",
                    "question": "Is Emma more defensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Nancy is less offensive than Emma.",
                    "question": "Is Nancy less offensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Nancy is less offensive than Emma.",
                    "question": "Is Emma less offensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Emma is less defensive than Nancy.",
                    "question": "Is Nancy more defensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Emma is less defensive than Nancy.",
                    "question": "Is Emma more defensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Emma is less defensive than Nancy.",
                    "question": "Is Nancy less offensive than Emma?",
                    "answer": "yes"
                },
                {
                    "context": "Emma is less defensive than Nancy.",
                    "question": "Is Emma less offensive than Nancy?",
                    "answer": "no"
                },
                {
                    "context": "Sandra is more defensive than Ryan.",
                    "question": "Is Sandra more defensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Sandra is more defensive than Ryan.",
                    "question": "Is Ryan more defensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Sandra is more defensive than Ryan.",
                    "question": "Is Sandra less offensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Sandra is more defensive than Ryan.",
                    "question": "Is Ryan less offensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Ryan is more offensive than Sandra.",
                    "question": "Is Sandra more defensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan is more offensive than Sandra.",
                    "question": "Is Ryan more defensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Ryan is more offensive than Sandra.",
                    "question": "Is Sandra less offensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan is more offensive than Sandra.",
                    "question": "Is Ryan less offensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Sandra is less offensive than Ryan.",
                    "question": "Is Sandra more defensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Sandra is less offensive than Ryan.",
                    "question": "Is Ryan more defensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Sandra is less offensive than Ryan.",
                    "question": "Is Sandra less offensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Sandra is less offensive than Ryan.",
                    "question": "Is Ryan less offensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Ryan is less defensive than Sandra.",
                    "question": "Is Sandra more defensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan is less defensive than Sandra.",
                    "question": "Is Ryan more defensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Ryan is less defensive than Sandra.",
                    "question": "Is Sandra less offensive than Ryan?",
                    "answer": "yes"
                },
                {
                    "context": "Ryan is less defensive than Sandra.",
                    "question": "Is Ryan less offensive than Sandra?",
                    "answer": "no"
                },
                {
                    "context": "Sara is more negative than Dan.",
                    "question": "Is Sara more negative than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Sara is more negative than Dan.",
                    "question": "Is Dan more negative than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Sara is more negative than Dan.",
                    "question": "Is Sara less positive than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Sara is more negative than Dan.",
                    "question": "Is Dan less positive than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Dan is more positive than Sara.",
                    "question": "Is Sara more negative than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Dan is more positive than Sara.",
                    "question": "Is Dan more negative than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Dan is more positive than Sara.",
                    "question": "Is Sara less positive than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Dan is more positive than Sara.",
                    "question": "Is Dan less positive than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Sara is less positive than Dan.",
                    "question": "Is Sara more negative than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Sara is less positive than Dan.",
                    "question": "Is Dan more negative than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Sara is less positive than Dan.",
                    "question": "Is Sara less positive than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Sara is less positive than Dan.",
                    "question": "Is Dan less positive than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Dan is less negative than Sara.",
                    "question": "Is Sara more negative than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Dan is less negative than Sara.",
                    "question": "Is Dan more negative than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Dan is less negative than Sara.",
                    "question": "Is Sara less positive than Dan?",
                    "answer": "yes"
                },
                {
                    "context": "Dan is less negative than Sara.",
                    "question": "Is Dan less positive than Sara?",
                    "answer": "no"
                },
                {
                    "context": "Joe is more active than Suzanne.",
                    "question": "Is Joe more active than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is more active than Suzanne.",
                    "question": "Is Suzanne more active than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Joe is more active than Suzanne.",
                    "question": "Is Joe less passive than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is more active than Suzanne.",
                    "question": "Is Suzanne less passive than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Suzanne is more passive than Joe.",
                    "question": "Is Joe more active than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Suzanne is more passive than Joe.",
                    "question": "Is Suzanne more active than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Suzanne is more passive than Joe.",
                    "question": "Is Joe less passive than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Suzanne is more passive than Joe.",
                    "question": "Is Suzanne less passive than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Joe is less passive than Suzanne.",
                    "question": "Is Joe more active than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is less passive than Suzanne.",
                    "question": "Is Suzanne more active than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Joe is less passive than Suzanne.",
                    "question": "Is Joe less passive than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is less passive than Suzanne.",
                    "question": "Is Suzanne less passive than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Suzanne is less active than Joe.",
                    "question": "Is Joe more active than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Suzanne is less active than Joe.",
                    "question": "Is Suzanne more active than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Suzanne is less active than Joe.",
                    "question": "Is Joe less passive than Suzanne?",
                    "answer": "yes"
                },
                {
                    "context": "Suzanne is less active than Joe.",
                    "question": "Is Suzanne less passive than Joe?",
                    "answer": "no"
                },
                {
                    "context": "Jerry is more active than Lisa.",
                    "question": "Is Jerry more active than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is more active than Lisa.",
                    "question": "Is Lisa more active than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Jerry is more active than Lisa.",
                    "question": "Is Jerry less passive than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is more active than Lisa.",
                    "question": "Is Lisa less passive than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Lisa is more passive than Jerry.",
                    "question": "Is Jerry more active than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Lisa is more passive than Jerry.",
                    "question": "Is Lisa more active than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Lisa is more passive than Jerry.",
                    "question": "Is Jerry less passive than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Lisa is more passive than Jerry.",
                    "question": "Is Lisa less passive than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Jerry is less passive than Lisa.",
                    "question": "Is Jerry more active than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is less passive than Lisa.",
                    "question": "Is Lisa more active than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Jerry is less passive than Lisa.",
                    "question": "Is Jerry less passive than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is less passive than Lisa.",
                    "question": "Is Lisa less passive than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Lisa is less active than Jerry.",
                    "question": "Is Jerry more active than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Lisa is less active than Jerry.",
                    "question": "Is Lisa more active than Jerry?",
                    "answer": "no"
                },
                {
                    "context": "Lisa is less active than Jerry.",
                    "question": "Is Jerry less passive than Lisa?",
                    "answer": "yes"
                },
                {
                    "context": "Lisa is less active than Jerry.",
                    "question": "Is Lisa less passive than Jerry?",
                    "answer": "no"
                }
            ],
            "total_cases": 80
        },
        {
            "test_type": "INV",
            "capability": "Robustness",
            "test_name": "Question typo",
            "test_name_description": "Test's model's ability to handle questions typos (whether changing the spelling of words in the questions changes the model's output)",
            "test_type_description": "Invariance in short INV test is inspired from metamorphic testing of software engineering. For this type of test label-preserving perturbations to inputs are applied and the expected prediction generated by the model should remain the same. INV tests can be performed with unlabeled data since they do not depend on true labels.",
            "capability_description": "This type of test capability test's model's capability to handle small changes in the input (typos, irrelevant sentence addition, question contraction etc.).",
            "test_cases": [
                {
                    "context": "AMC announced the series' cancellation in July 2012, but picked it up for a third season after a renegotiation with Fox Television Studios and Netflix. The Killing was again cancelled by AMC in September 2013, but Netflix announced in November 2013 that it had ordered a fourth season consisting of six episodes to conclude the series. The complete fourth season was released on Netflix on August 1, 2014.",
                    "question": "si there a season 5 of the killing",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "is"
                        ],
                        "to": [
                            "si"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "In February 2004, the IFAB announced that after Euro 2004 in Portugal, both the golden goal and silver goal methods would be removed from the Laws of the Game. Since the 2006 FIFA World Cup in Germany the golden goal has never been used in the event of a tied match during the knockout stage, and FIFA restored the original rules: in the event of a tied game after the original 90 minutes, two straight 15-minute periods of extra time are played. If a tie still remains after that, the winner is decided by a penalty shoot-out.",
                    "question": "does goldeng oal apply in the world cup 2018",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "golden",
                            "goal"
                        ],
                        "to": [
                            "goldeng",
                            "oal"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "The first drive-in was opened in 1933 in New Jersey. In 2017 there exist about 330 operating drive-in theaters in the United States, down from a peak of about 4,000 in the late 1950's. At least six are listed on the National Register of Historic Places (NRHP). Notable U.S. examples include:",
                    "question": "do they still have drive i nmovies in america",
                    "gold_answer": "yes",
                    "prediction_before_change": "yes",
                    "changed": {
                        "from": [
                            "in",
                            "movies"
                        ],
                        "to": [
                            "i",
                            "nmovies"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "The original configuration of the Band ended its touring career in 1976 with an elaborate live ballroom performance featuring numerous musical celebrities. This performance was filmed for Martin Scorsese's 1978 documentary The Last Waltz. The Band resumed touring in 1983 without guitarist Robertson, who had found success with a solo career and as a Hollywood music producer. Following a 1986 show, Manuel committed suicide. The remaining three members continued to tour and record albums with a succession of musicians filling Manuel's and Robertson's roles; the final configuration of the group included Richard Bell (piano), Randy Ciarlante (drums), and Jim Weider (guitar). Danko died of heart failure in 1999, after which the group broke up for good. Helm was diagnosed with throat cancer in 1998 and was unable to sing for several years, but he eventually regained the use of his voice. He continued to perform and released several successful albums until he died in 2012.",
                    "question": "are all the members of the ban dstill alive",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "band",
                            "still"
                        ],
                        "to": [
                            "ban",
                            "dstill"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "Heterochromia is a difference in coloration, usually of the iris but also of hair or skin. Heterochromia is determined by the production, delivery, and concentration of melanin (a pigment). It may be inherited, or caused by genetic mosaicism, chimerism, disease, or injury. It occurs in humans and certain breeds of dogs and cats.",
                    "question": "can you have one green eye and one blue eye",
                    "gold_answer": "yes",
                    "prediction_before_change": "yes",
                    "changed": {
                        "from": [],
                        "to": []
                    },
                    "where": "question"
                }
            ],
            "total_cases": 5
        },
        {
            "test_type": "INV",
            "capability": "Robustness",
            "test_name": "Question contractions",
            "test_name_description": "Test's model's ability to handle contraction in questions (whether contractions (what is -> what's) in the questions changes the model's output)",
            "test_type_description": "Invariance in short INV test is inspired from metamorphic testing of software engineering. For this type of test label-preserving perturbations to inputs are applied and the expected prediction generated by the model should remain the same. INV tests can be performed with unlabeled data since they do not depend on true labels.",
            "capability_description": "This type of test capability test's model's capability to handle small changes in the input (typos, irrelevant sentence addition, question contraction etc.).",
            "test_cases": [
                {
                    "context": "In 2011, screenwriter Noxon told Collider.com that plans for an imminent sequel were shelved due to the disappointing performance of the first installment at the box office.",
                    "question": "is there a sequel to the movie i'm four",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "i am"
                        ],
                        "to": [
                            "i'm"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "Plans for any future installments for the series have been shelved. Director D.J. Caruso confirmed that he would like to direct a sequel, but in an interview with MTV Hollywood Crush Lore has stated that any questions or requests for a sequel should be directed to producer Michael Bay.",
                    "question": "are there going to be any more i'm number four movies",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "i am"
                        ],
                        "to": [
                            "i'm"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "``God Save the Queen'' (alternatively ``God Save the King'', depending on the gender of the reigning monarch) is the national or royal anthem in a number of Commonwealth realms, their territories, and the British Crown dependencies. The author of the tune is unknown, and it may originate in plainchant; but an attribution to the composer John Bull is sometimes made.",
                    "question": "does the uk national anthem change if there's a king",
                    "gold_answer": "yes",
                    "prediction_before_change": "yes",
                    "changed": {
                        "from": [
                            "there is"
                        ],
                        "to": [
                            "there's"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "In 2011, screenwriter Noxon told Collider.com that plans for an imminent sequel were shelved due to the disappointing performance of the first installment at the box office.",
                    "question": "is there a movie after i'm number 4",
                    "gold_answer": "no",
                    "prediction_before_change": "no",
                    "changed": {
                        "from": [
                            "i am"
                        ],
                        "to": [
                            "i'm"
                        ]
                    },
                    "where": "question"
                },
                {
                    "context": "Most seat belt laws in the United States are left to the states. However, the first seat belt law was a federal law, Title 49 of the United States Code, Chapter 301, Motor Vehicle Safety Standard, which took effect on January 1, 1968, that required all vehicles (except buses) to be fitted with seat belts in all designated seating positions. This law has since been modified to require three-point seat belts in outboard-seating positions, and finally three-point seat belts in all seating positions. Initially, seat belt use was voluntary. New York was the first state to pass a law which required vehicle occupants to wear seat belts, a law that came into effect on December 1, 1984. Officer Nicholas Cimmino of the Westchester County Department of Public Safety wrote the nation's first ticket for such violation. New Hampshire is the only state that has no enforceable laws for the wearing of seat belts in a vehicle.",
                    "question": "are there any states that don't have a seat belt law",
                    "gold_answer": "yes",
                    "prediction_before_change": "yes",
                    "changed": {
                        "from": [
                            "do not"
                        ],
                        "to": [
                            "don't"
                        ]
                    },
                    "where": "question"
                }
            ],
            "total_cases": 5
        },
        {
            "test_type": "INV",
            "capability": "Robustness",
            "test_name": "Add random sentence to context",
            "test_name_description": "Test's model's ability to handle addition of random sentences in the model's input context (whether addition of a random sentence at the beginning and end of the input context changes model's output).",
            "test_type_description": "Invariance in short INV test is inspired from metamorphic testing of software engineering. For this type of test label-preserving perturbations to inputs are applied and the expected prediction generated by the model should remain the same. INV tests can be performed with unlabeled data since they do not depend on true labels.",
            "capability_description": "This type of test capability test's model's capability to handle small changes in the input (typos, irrelevant sentence addition, question contraction etc.).",
            "test_cases": [
                {
                    "context": "A peripherally inserted central catheter (PICC or PIC line), less commonly called a percutaneous indwelling central catheter, is a form of intravenous access that can be used for a prolonged period of time (e.g., for long chemotherapy regimens, extended antibiotic therapy, or total parenteral nutrition) or for administration of substances that should not be done peripherally (e.g., antihypotensive agents a.k.a. pressors). It is a catheter that enters the body through the skin (percutaneously) at a peripheral site, extends to the superior vena cava (a central venous trunk), and stays in place (dwells within the veins) for days or weeks.It prohibits unequal application of voter registration requirements, racial segregation in schools, employment, and public accommodations. ",
                    "question": "can a picc line be used for nutrition",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "span": [
                        643,
                        782
                    ]
                },
                {
                    "context": "It prohibits unequal application of voter registration requirements, racial segregation in schools, employment, and public accommodations. A peripherally inserted central catheter (PICC or PIC line), less commonly called a percutaneous indwelling central catheter, is a form of intravenous access that can be used for a prolonged period of time (e.g., for long chemotherapy regimens, extended antibiotic therapy, or total parenteral nutrition) or for administration of substances that should not be done peripherally (e.g., antihypotensive agents a.k.a. pressors). It is a catheter that enters the body through the skin (percutaneously) at a peripheral site, extends to the superior vena cava (a central venous trunk), and stays in place (dwells within the veins) for days or weeks.",
                    "question": "can a picc line be used for nutrition",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "span": [
                        0,
                        139
                    ]
                },
                {
                    "context": "Curry's first experience with the United States national team came at the 2007 FIBA Under-19 World Championship, where he helped Team USA capture the silver medal. In 2010, he was selected to the senior squad, playing limited minutes at the 2010 FIBA World Championship (known later as FIBA Basketball World Cup) as the United States won the gold medal in an undefeated tournament. In 2014, he took on a larger role with the team, helping them to another undefeated tournament at the 2014 World Cup and scoring 10 points in the final game. On June 6, 2016, Curry withdrew from consideration for the 2016 Olympics in Brazil, citing ankle and knee ailments as the major reason behind the decision.The series was renewed for a fourth season and it premiered on March 16, 2018. ",
                    "question": "does steph curry have an olympic gold medal",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "span": [
                        695,
                        774
                    ]
                },
                {
                    "context": "The series was renewed for a fourth season and it premiered on March 16, 2018. Curry's first experience with the United States national team came at the 2007 FIBA Under-19 World Championship, where he helped Team USA capture the silver medal. In 2010, he was selected to the senior squad, playing limited minutes at the 2010 FIBA World Championship (known later as FIBA Basketball World Cup) as the United States won the gold medal in an undefeated tournament. In 2014, he took on a larger role with the team, helping them to another undefeated tournament at the 2014 World Cup and scoring 10 points in the final game. On June 6, 2016, Curry withdrew from consideration for the 2016 Olympics in Brazil, citing ankle and knee ailments as the major reason behind the decision.",
                    "question": "does steph curry have an olympic gold medal",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "span": [
                        0,
                        79
                    ]
                },
                {
                    "context": "In informal games, it is customary to announce ``check'' when making a move that puts the opponent's king in check. In formal competitions, however, check is rarely announced.In contrast, in scientific and ornithological practice, ``dove'' tends to be used for smaller species and ``pigeon'' for larger ones, but this is in no way consistently applied. ",
                    "question": "is it required to say check in chess",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "span": [
                        175,
                        353
                    ]
                },
                {
                    "context": "In contrast, in scientific and ornithological practice, ``dove'' tends to be used for smaller species and ``pigeon'' for larger ones, but this is in no way consistently applied. In informal games, it is customary to announce ``check'' when making a move that puts the opponent's king in check. In formal competitions, however, check is rarely announced.",
                    "question": "is it required to say check in chess",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "span": [
                        0,
                        178
                    ]
                },
                {
                    "context": "In the United States, there is no federal law regulating the practice of tattooing. However, all 50 states and the District of Columbia have statutory laws requiring a person receiving a tattoo be 18 years or older. This is partially based on the legal principle that a minor cannot enter into a legal contract or otherwise render informed consent for a procedure. Most states permit a person under the age of 18 to receive a tattoo with permission of a parent or guardian, but some states outright prohibit tattooing under a certain age regardless of permission, with the exception of medical necessity (such as markings placed for radiation therapy).On 5 June 2015 during a T20 Blast game between the Worcestershire Rapids and the Northamptonshire Steelbacks, Worcestershire chose not to play a wicket-keeper in the 16th over of the match. ",
                    "question": "can you get a tattoo at any age",
                    "prediction_before_change": "yes",
                    "gold_answer": "no",
                    "span": [
                        652,
                        842
                    ]
                },
                {
                    "context": "On 5 June 2015 during a T20 Blast game between the Worcestershire Rapids and the Northamptonshire Steelbacks, Worcestershire chose not to play a wicket-keeper in the 16th over of the match. In the United States, there is no federal law regulating the practice of tattooing. However, all 50 states and the District of Columbia have statutory laws requiring a person receiving a tattoo be 18 years or older. This is partially based on the legal principle that a minor cannot enter into a legal contract or otherwise render informed consent for a procedure. Most states permit a person under the age of 18 to receive a tattoo with permission of a parent or guardian, but some states outright prohibit tattooing under a certain age regardless of permission, with the exception of medical necessity (such as markings placed for radiation therapy).",
                    "question": "can you get a tattoo at any age",
                    "prediction_before_change": "yes",
                    "gold_answer": "no",
                    "span": [
                        0,
                        190
                    ]
                },
                {
                    "context": "Due to the use of contemporary music in each episode, none of the seasons are presently available on DVD, due to music licensing issues. However, the entire series, incorporating the contemporary music, was previously released on DVD as Cold Case: The Complete Edition, by CBS Productions (ISBN 8-5857-9659-6), on 44 dual-layer disks, in a single boxed set. This set is out of print.In the Time of the Butterflies is a historical novel by Julia Alvarez, relating an account of the Mirabal sisters during the time of the Trujillo dictatorship in the Dominican Republic. ",
                    "question": "will cold case ever be released on dvd",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "span": [
                        383,
                        569
                    ]
                },
                {
                    "context": "In the Time of the Butterflies is a historical novel by Julia Alvarez, relating an account of the Mirabal sisters during the time of the Trujillo dictatorship in the Dominican Republic. Due to the use of contemporary music in each episode, none of the seasons are presently available on DVD, due to music licensing issues. However, the entire series, incorporating the contemporary music, was previously released on DVD as Cold Case: The Complete Edition, by CBS Productions (ISBN 8-5857-9659-6), on 44 dual-layer disks, in a single boxed set. This set is out of print.",
                    "question": "will cold case ever be released on dvd",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "span": [
                        0,
                        186
                    ]
                }
            ],
            "total_cases": 10
        },
        {
            "test_type": "INV",
            "capability": "NER",
            "test_name": "Change name everywhere",
            "test_name_description": "Test's model's capability to handle changing a name in the input context and also in the question (if it contains the name)(whether a name change in the context and the questions changes the model output).",
            "test_type_description": "Invariance in short INV test is inspired from metamorphic testing of software engineering. For this type of test label-preserving perturbations to inputs are applied and the expected prediction generated by the model should remain the same. INV tests can be performed with unlabeled data since they do not depend on true labels.",
            "capability_description": "NER (Named Entity Recognition) Tests model\u2019s ability to appropriately understand named entities.",
            "test_cases": [
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Faye Dunaway (Elizabeth Turner), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Serena Joy",
                        "to": "Elizabeth Turner"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Melissa Scott (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Faye Dunaway",
                        "to": "Melissa Scott"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Fred), David Powell (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Aidan Quinn",
                        "to": "David Powell"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Elizabeth Brooks (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Faye Dunaway",
                        "to": "Elizabeth Brooks"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Christian), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Fred",
                        "to": "Christian"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Joshua Hernandez. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Harold Pinter",
                        "to": "Joshua Hernandez"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Julie/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Kate",
                        "to": "Julie"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Emily Diaz (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Faye Dunaway",
                        "to": "Emily Diaz"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Ashley Reed (Kate/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by Harold Pinter. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Natasha Richardson",
                        "to": "Ashley Reed"
                    }
                },
                {
                    "context": "The Handmaid's Tale is a 1990 film adaptation of Margaret Atwood's novel of the same name. Directed by Volker Schl\u00f6ndorff, the film stars Natasha Richardson (Kate/Offred), Faye Dunaway (Serena Joy), Robert Duvall (The Commander, Fred), Aidan Quinn (Nick), and Elizabeth McGovern (Moira). The screenplay was written by John Price. The original music score was composed by Ryuichi Sakamoto. MGM Home Entertainment released an Avant-Garde Cinema DVD of the film in 2001. The film was entered into the 40th Berlin International Film Festival.",
                    "question": "is there a movie the handmaid's tale",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Harold Pinter",
                        "to": "John Price"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, Daniel Sanchez, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "Daniel Sanchez"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by John Williams and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by John Williams, Tony Moore, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Robert Kirkman",
                        "to": "John Williams"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, David Foster, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "David Foster"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, Matthew King, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "Matthew King"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Matthew King and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Matthew King, Tony Moore, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Robert Kirkman",
                        "to": "Matthew King"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, John Murphy, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "John Murphy"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, James Parker, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "James Parker"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and David Howard, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, Tony Moore, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Dave Erickson",
                        "to": "David Howard"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Robert Kirkman and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Robert Kirkman, Michael Cook, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Tony Moore",
                        "to": "Michael Cook"
                    }
                },
                {
                    "context": "Fear the Walking Dead is an American post-apocalyptic horror drama television series created by Matthew Green and Dave Erickson, that premiered on AMC on August 23, 2015. It is a companion series and prequel to The Walking Dead, which is based on the comic book series of the same name by Matthew Green, Tony Moore, and Charlie Adlard.",
                    "question": "is fear the walking dead based on the comics",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Robert Kirkman",
                        "to": "Matthew Green"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Michael Wood, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Michael Wood"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Christopher Gray, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Christopher Gray"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Matthew Miller, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Matthew Miller"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for David Gonzalez, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "David Gonzalez"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for James Gomez, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "James Gomez"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for John Taylor, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "John Taylor"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Joshua Smith, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Joshua Smith"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Daniel Sanchez, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Daniel Sanchez"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for Joseph Adams, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "Joseph Adams"
                    }
                },
                {
                    "context": "The film received positive reviews from critics, and was nominated for four Academy Awards: Best Picture, Best Supporting Actor for William Kelly, Best Sound, and Best Screenplay Based on Material Previously Produced or Published.",
                    "question": "was the green mile nominated for any oscars",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Michael Clarke Duncan",
                        "to": "William Kelly"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Michael Watson, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Michael Watson"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Christopher Myers, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Christopher Myers"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Matthew Wilson, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Matthew Wilson"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by David Lee, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "David Lee"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by James Hughes, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "James Hughes"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by John Gray, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "John Gray"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Joshua Morris, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Joshua Morris"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Daniel Walker, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Daniel Walker"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by Joseph Ramirez, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "Joseph Ramirez"
                    }
                },
                {
                    "context": "The film was adapted by Wesley Strick from the original screenplay by William Richardson, which was an adaptation from the novel The Executioners by John D. MacDonald.",
                    "question": "is cape fear based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "James R. Webb",
                        "to": "William Richardson"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Michael Watson stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Michael Watson"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Christopher Ortiz stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Christopher Ortiz"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Matthew Perez stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Matthew Perez"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. David Edwards stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "David Edwards"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. James Smith stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "James Smith"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. John Bailey stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "John Bailey"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Joshua Cruz stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Joshua Cruz"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Daniel Taylor stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Daniel Taylor"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. Joseph Roberts stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "Joseph Roberts"
                    }
                },
                {
                    "context": "Ozark is an American crime drama web television series created by Bill Dubuque and produced by Media Rights Capital. William Gutierrez stars in the series; he also directed the first two and last two episodes of season 1. The first season is composed of nine one-hour episodes and a final 80-minute episode; it was released on Netflix on July 21, 2017.",
                    "question": "is netflix ozark based on a true story",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Jason Bateman",
                        "to": "William Gutierrez"
                    }
                }
            ],
            "total_cases": 50
        },
        {
            "test_type": "INV",
            "capability": "NER",
            "test_name": "Change location everywhere",
            "test_name_description": "Test's model's capability to handle changing a location in the input context and also in the question (if it contains the name)(whether a location change in the context and the question changes the model output).",
            "test_type_description": "Invariance in short INV test is inspired from metamorphic testing of software engineering. For this type of test label-preserving perturbations to inputs are applied and the expected prediction generated by the model should remain the same. INV tests can be performed with unlabeled data since they do not depend on true labels.",
            "capability_description": "NER (Named Entity Recognition) Tests model\u2019s ability to appropriately understand named entities.",
            "test_cases": [
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Nigeria on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Nigeria"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Peru on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Peru"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Ukraine on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Ukraine"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Myanmar on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Myanmar"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, France on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "France"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Peru on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Peru"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Germany on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Germany"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Colombia on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Colombia"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Spain on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Spain"
                    }
                },
                {
                    "context": "The 2018 UEFA Champions League Final was the final match of the 2017--18 UEFA Champions League, the 63rd season of Europe's premier club football tournament organised by UEFA, and the 26th season since it was renamed from the European Cup to the UEFA Champions League. It was played at the NSC Olimpiyskiy Stadium in Kiev, Angola on 26 May 2018, between Spanish side and defending champions Real Madrid, who had won the competition in each of the last two seasons, and English side Liverpool.",
                    "question": "is the uefa champions league final one game",
                    "prediction_before_change": "yes",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Ukraine",
                        "to": "Angola"
                    }
                },
                {
                    "context": "Korea won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Korea"
                    }
                },
                {
                    "context": "China won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "China"
                    }
                },
                {
                    "context": "Angola won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Angola"
                    }
                },
                {
                    "context": "Spain won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Spain"
                    }
                },
                {
                    "context": "Malaysia won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Malaysia"
                    }
                },
                {
                    "context": "Sudan won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Sudan"
                    }
                },
                {
                    "context": "Ukraine won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Ukraine"
                    }
                },
                {
                    "context": "Russian Federation won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Russian Federation"
                    }
                },
                {
                    "context": "Malaysia won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Malaysia"
                    }
                },
                {
                    "context": "Ethiopia won 2--0 with both goals from James Rodr\u00edguez, the first in the 28th minute, where he controlled Abel Aguilar's headed ball on his chest before volleying left-footed from 25 yards out with the ball going in off the underside of the crossbar, which won the 2014 FIFA Pusk\u00e1s Award later in the year. The second goal, in the 50th minute, was a close-range shot from six yards out after receiving the ball from a header by Juan Cuadrado on the right.",
                    "question": "did colombia make it to the round of 16",
                    "prediction_before_change": "no",
                    "gold_answer": "yes",
                    "changed": {
                        "from": "Colombia",
                        "to": "Ethiopia"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Bangladesh broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Bangladesh"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Madagascar broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Madagascar"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Yemen broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Yemen"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Iran broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Iran"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Poland broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Poland"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Bangladesh broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Bangladesh"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Myanmar broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Myanmar"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Philippines broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Philippines"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Turkey broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Turkey"
                    }
                },
                {
                    "context": "In 1998 EchoStar purchased the broadcasting assets of a satellite broadcasting joint venture of News Corporation and MCI Worldcom, called ASkyB (for American Sky Broadcasting, named after News Corp's BSkyB service in Britain); the two companies had nearly merged (which called for Dish Network being renamed Sky) before it was called off due to Charlie Ergen's clashes with News Corp. executives. With this purchase EchoStar obtained 28 of the 32 transponder licenses in the 110\u00b0 West orbital slot, more than doubling existing continental Tanzania broadcasting capacity at a value of $682.5 million; some of the other assets were picked up by rival PrimeStar, which was sold to DirecTV in 1999. The acquisition (which also included an uplink center in Gilbert, Arizona) inspired the company to introduce a multi satellite system called Dish 500, theoretically capable of receiving more than 500 channels on one Dish. In the same year, EchoStar, partnering with Bell Canada, launched Dish Network Canada.",
                    "question": "is directv and dish network owned by the same company",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United States",
                        "to": "Tanzania"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Italy murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Italy"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Ethiopia murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Ethiopia"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Angola murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Angola"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Algeria murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Algeria"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Egypt murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Egypt"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Spain murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Spain"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Canada murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Canada"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Vietnam murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Vietnam"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal United States murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "United States"
                    }
                },
                {
                    "context": "The film also had some controversy because it has been indirectly linked to the brutal Mexico murder of James Bulger. The killers, who were 10 years old at the time, were said to have imitated a scene in which one of Chucky's victims is splashed with blue paint. Although these allegations against the film have never been proven, the case has led to some new legislation for video films. Psychologist Guy Cumberbatch has stated, ``The link with a video was that the father of one of the boys -- Jon Venables -- had rented Child's Play 3: Look Who's Stalking some months earlier.'' However, the police officer who directed the investigation, Albert Kirby, found that the son, Jon, was not living with his father at the time and was unlikely to have seen the film. Moreover, the boy disliked horror films--a point later confirmed by psychiatric reports. Thus the police investigation, which had specifically looked for a video link, concluded there was none.",
                    "question": "was child's play 3 banned in uk",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "United Kingdom",
                        "to": "Mexico"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Kenya that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Kenya began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Kenya (P.A.T) sanctioned by The Sports Authority of Kenya (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Kenya"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Angola that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Angola began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Angola (P.A.T) sanctioned by The Sports Authority of Angola (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Angola"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of France that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from France began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of France (P.A.T) sanctioned by The Sports Authority of France (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "France"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Ukraine that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Ukraine began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Ukraine (P.A.T) sanctioned by The Sports Authority of Ukraine (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Ukraine"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Peru that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Peru began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Peru (P.A.T) sanctioned by The Sports Authority of Peru (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Peru"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Philippines that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Philippines began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Philippines (P.A.T) sanctioned by The Sports Authority of Philippines (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Philippines"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Indonesia that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Indonesia began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Indonesia (P.A.T) sanctioned by The Sports Authority of Indonesia (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Indonesia"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Uzbekistan that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Uzbekistan began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Uzbekistan (P.A.T) sanctioned by The Sports Authority of Uzbekistan (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Uzbekistan"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Malaysia that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Malaysia began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Malaysia (P.A.T) sanctioned by The Sports Authority of Malaysia (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Malaysia"
                    }
                },
                {
                    "context": "Muay Thai (Thai: \u0e21\u0e27\u0e22\u0e44\u0e17\u0e22, RTGS: Muai Thai, pronounced (m\u016ba\u032fj th\u0101j) ( listen)) or Thai boxing is a combat sport of Korea that uses stand-up striking along with various clinching techniques. This discipline is known as the ``Art of Eight Limbs'' because it is characterized by the combined use of fists, elbows, knees and shins. Muay Thai became widespread internationally in the twentieth century, when practitioners from Korea began competing in Kickboxing, mixed rules matches, as well as matches under Muay Thai rules around the world. The professional league is governed by The Professional Boxing Association of Korea (P.A.T) sanctioned by The Sports Authority of Korea (S.A.T.), and World Professional Muaythai Federation (WMF) overseas.",
                    "question": "is there a difference between muay thai and thai boxing",
                    "prediction_before_change": "no",
                    "gold_answer": "no",
                    "changed": {
                        "from": "Thailand",
                        "to": "Korea"
                    }
                }
            ],
            "total_cases": 50
        },
        {
            "test_type": "MFT",
            "capability": "Temporal",
            "test_name": "There was a change in profession",
            "test_name_description": "Test's model's ability to understand changes in profession over time.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability test's a model's ability to understand order of events.",
            "test_cases": [
                {
                    "context": "Both Sharon and Heather were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Sharon a model?",
                    "answer": "yes"
                },
                {
                    "context": "Both Sharon and Heather were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Heather a model?",
                    "answer": "no"
                },
                {
                    "context": "Both Sharon and Heather were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Sharon a waitress?",
                    "answer": "no"
                },
                {
                    "context": "Both Sharon and Heather were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Heather a waitress?",
                    "answer": "yes"
                },
                {
                    "context": "Both Heather and Sharon were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Sharon a model?",
                    "answer": "yes"
                },
                {
                    "context": "Both Heather and Sharon were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Heather a model?",
                    "answer": "no"
                },
                {
                    "context": "Both Heather and Sharon were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Sharon a waitress?",
                    "answer": "no"
                },
                {
                    "context": "Both Heather and Sharon were waitresss, but there was a change in Sharon, who is now a model.",
                    "question": "Is Heather a waitress?",
                    "answer": "yes"
                },
                {
                    "context": "Both Steven and Larry were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Steven an architect?",
                    "answer": "yes"
                },
                {
                    "context": "Both Steven and Larry were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Larry an architect?",
                    "answer": "no"
                },
                {
                    "context": "Both Steven and Larry were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Steven an investor?",
                    "answer": "no"
                },
                {
                    "context": "Both Steven and Larry were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Larry an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Both Larry and Steven were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Steven an architect?",
                    "answer": "yes"
                },
                {
                    "context": "Both Larry and Steven were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Larry an architect?",
                    "answer": "no"
                },
                {
                    "context": "Both Larry and Steven were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Steven an investor?",
                    "answer": "no"
                },
                {
                    "context": "Both Larry and Steven were investors, but there was a change in Steven, who is now an architect.",
                    "question": "Is Larry an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Both Benjamin and Bruce were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Benjamin an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Both Benjamin and Bruce were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Bruce an accountant?",
                    "answer": "no"
                },
                {
                    "context": "Both Benjamin and Bruce were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Benjamin an attorney?",
                    "answer": "no"
                },
                {
                    "context": "Both Benjamin and Bruce were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Bruce an attorney?",
                    "answer": "yes"
                },
                {
                    "context": "Both Bruce and Benjamin were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Benjamin an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Both Bruce and Benjamin were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Bruce an accountant?",
                    "answer": "no"
                },
                {
                    "context": "Both Bruce and Benjamin were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Benjamin an attorney?",
                    "answer": "no"
                },
                {
                    "context": "Both Bruce and Benjamin were attorneys, but there was a change in Benjamin, who is now an accountant.",
                    "question": "Is Bruce an attorney?",
                    "answer": "yes"
                },
                {
                    "context": "Both Carolyn and Linda were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Both Carolyn and Linda were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Linda an investor?",
                    "answer": "no"
                },
                {
                    "context": "Both Carolyn and Linda were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Carolyn an agent?",
                    "answer": "no"
                },
                {
                    "context": "Both Carolyn and Linda were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Linda an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Both Linda and Carolyn were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Both Linda and Carolyn were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Linda an investor?",
                    "answer": "no"
                },
                {
                    "context": "Both Linda and Carolyn were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Carolyn an agent?",
                    "answer": "no"
                },
                {
                    "context": "Both Linda and Carolyn were agents, but there was a change in Carolyn, who is now an investor.",
                    "question": "Is Linda an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Both David and Annie were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is David a photographer?",
                    "answer": "yes"
                },
                {
                    "context": "Both David and Annie were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is Annie a photographer?",
                    "answer": "no"
                },
                {
                    "context": "Both David and Annie were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is David an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Both David and Annie were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is Annie an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Both Annie and David were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is David a photographer?",
                    "answer": "yes"
                },
                {
                    "context": "Both Annie and David were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is Annie a photographer?",
                    "answer": "no"
                },
                {
                    "context": "Both Annie and David were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is David an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Both Annie and David were entrepreneurs, but there was a change in David, who is now a photographer.",
                    "question": "Is Annie an entrepreneur?",
                    "answer": "yes"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Temporal",
            "test_name": "Understanding before / after -> first / last.",
            "test_name_description": "Test's model's ability to understand changes before, after, first and last.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability test's a model's ability to understand order of events.",
            "test_cases": [
                {
                    "context": "Lynn became a attorney before Barbara did.",
                    "question": "Did Lynn become a attorney first?",
                    "answer": "yes"
                },
                {
                    "context": "Lynn became a attorney before Barbara did.",
                    "question": "Did Barbara become a attorney last?",
                    "answer": "yes"
                },
                {
                    "context": "Barbara became a attorney after Lynn did.",
                    "question": "Did Lynn become a attorney first?",
                    "answer": "yes"
                },
                {
                    "context": "Barbara became a attorney after Lynn did.",
                    "question": "Did Barbara become a attorney last?",
                    "answer": "yes"
                },
                {
                    "context": "Helen became a actress before Matt did.",
                    "question": "Did Helen become a actress first?",
                    "answer": "yes"
                },
                {
                    "context": "Helen became a actress before Matt did.",
                    "question": "Did Matt become a actress last?",
                    "answer": "yes"
                },
                {
                    "context": "Matt became a actress after Helen did.",
                    "question": "Did Helen become a actress first?",
                    "answer": "yes"
                },
                {
                    "context": "Matt became a actress after Helen did.",
                    "question": "Did Matt become a actress last?",
                    "answer": "yes"
                },
                {
                    "context": "Ben became a advisor before Kelly did.",
                    "question": "Did Ben become a advisor first?",
                    "answer": "yes"
                },
                {
                    "context": "Ben became a advisor before Kelly did.",
                    "question": "Did Kelly become a advisor last?",
                    "answer": "yes"
                },
                {
                    "context": "Kelly became a advisor after Ben did.",
                    "question": "Did Ben become a advisor first?",
                    "answer": "yes"
                },
                {
                    "context": "Kelly became a advisor after Ben did.",
                    "question": "Did Kelly become a advisor last?",
                    "answer": "yes"
                },
                {
                    "context": "Betty became a educator before Charlotte did.",
                    "question": "Did Betty become a educator first?",
                    "answer": "yes"
                },
                {
                    "context": "Betty became a educator before Charlotte did.",
                    "question": "Did Charlotte become a educator last?",
                    "answer": "yes"
                },
                {
                    "context": "Charlotte became a educator after Betty did.",
                    "question": "Did Betty become a educator first?",
                    "answer": "yes"
                },
                {
                    "context": "Charlotte became a educator after Betty did.",
                    "question": "Did Charlotte become a educator last?",
                    "answer": "yes"
                },
                {
                    "context": "Michael became a entrepreneur before Jane did.",
                    "question": "Did Michael become a entrepreneur first?",
                    "answer": "yes"
                },
                {
                    "context": "Michael became a entrepreneur before Jane did.",
                    "question": "Did Jane become a entrepreneur last?",
                    "answer": "yes"
                },
                {
                    "context": "Jane became a entrepreneur after Michael did.",
                    "question": "Did Michael become a entrepreneur first?",
                    "answer": "yes"
                },
                {
                    "context": "Jane became a entrepreneur after Michael did.",
                    "question": "Did Jane become a entrepreneur last?",
                    "answer": "yes"
                }
            ],
            "total_cases": 20
        },
        {
            "test_type": "MFT",
            "capability": "Negation",
            "test_name": "Negation in context, may or may not be in question",
            "test_name_description": "Test's model's capability to understand negation in both context and question.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability test's a model's ability to handle negation",
            "test_cases": [
                {
                    "context": "Kenneth is not a photographer. Thomas is.",
                    "question": "Is Thomas a photographer?",
                    "answer": "yes"
                },
                {
                    "context": "Kenneth is not a photographer. Thomas is.",
                    "question": "Kenneth is not a photographer, right?",
                    "answer": "yes"
                },
                {
                    "context": "Kenneth is not a photographer. Thomas is.",
                    "question": "Is Kenneth a photographer?",
                    "answer": "no"
                },
                {
                    "context": "Kenneth is not a photographer. Thomas is.",
                    "question": "Thomas is not a photographer, right?",
                    "answer": "no"
                },
                {
                    "context": "Thomas is a photographer. Kenneth is not.",
                    "question": "Is Thomas a photographer?",
                    "answer": "yes"
                },
                {
                    "context": "Thomas is a photographer. Kenneth is not.",
                    "question": "Kenneth is not a photographer, right?",
                    "answer": "yes"
                },
                {
                    "context": "Thomas is a photographer. Kenneth is not.",
                    "question": "Is Kenneth a photographer?",
                    "answer": "no"
                },
                {
                    "context": "Thomas is a photographer. Kenneth is not.",
                    "question": "Thomas is not a photographer, right?",
                    "answer": "no"
                },
                {
                    "context": "Colin is not an educator. Chris is.",
                    "question": "Is Chris an educator?",
                    "answer": "yes"
                },
                {
                    "context": "Colin is not an educator. Chris is.",
                    "question": "Colin is not an educator, right?",
                    "answer": "yes"
                },
                {
                    "context": "Colin is not an educator. Chris is.",
                    "question": "Is Colin an educator?",
                    "answer": "no"
                },
                {
                    "context": "Colin is not an educator. Chris is.",
                    "question": "Chris is not an educator, right?",
                    "answer": "no"
                },
                {
                    "context": "Chris is an educator. Colin is not.",
                    "question": "Is Chris an educator?",
                    "answer": "yes"
                },
                {
                    "context": "Chris is an educator. Colin is not.",
                    "question": "Colin is not an educator, right?",
                    "answer": "yes"
                },
                {
                    "context": "Chris is an educator. Colin is not.",
                    "question": "Is Colin an educator?",
                    "answer": "no"
                },
                {
                    "context": "Chris is an educator. Colin is not.",
                    "question": "Chris is not an educator, right?",
                    "answer": "no"
                },
                {
                    "context": "Judith is not an editor. Amy is.",
                    "question": "Is Amy an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Judith is not an editor. Amy is.",
                    "question": "Judith is not an editor, right?",
                    "answer": "yes"
                },
                {
                    "context": "Judith is not an editor. Amy is.",
                    "question": "Is Judith an editor?",
                    "answer": "no"
                },
                {
                    "context": "Judith is not an editor. Amy is.",
                    "question": "Amy is not an editor, right?",
                    "answer": "no"
                },
                {
                    "context": "Amy is an editor. Judith is not.",
                    "question": "Is Amy an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Amy is an editor. Judith is not.",
                    "question": "Judith is not an editor, right?",
                    "answer": "yes"
                },
                {
                    "context": "Amy is an editor. Judith is not.",
                    "question": "Is Judith an editor?",
                    "answer": "no"
                },
                {
                    "context": "Amy is an editor. Judith is not.",
                    "question": "Amy is not an editor, right?",
                    "answer": "no"
                },
                {
                    "context": "Ken is not a journalist. Johnny is.",
                    "question": "Is Johnny a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Ken is not a journalist. Johnny is.",
                    "question": "Ken is not a journalist, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ken is not a journalist. Johnny is.",
                    "question": "Is Ken a journalist?",
                    "answer": "no"
                },
                {
                    "context": "Ken is not a journalist. Johnny is.",
                    "question": "Johnny is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Johnny is a journalist. Ken is not.",
                    "question": "Is Johnny a journalist?",
                    "answer": "yes"
                },
                {
                    "context": "Johnny is a journalist. Ken is not.",
                    "question": "Ken is not a journalist, right?",
                    "answer": "yes"
                },
                {
                    "context": "Johnny is a journalist. Ken is not.",
                    "question": "Is Ken a journalist?",
                    "answer": "no"
                },
                {
                    "context": "Johnny is a journalist. Ken is not.",
                    "question": "Johnny is not a journalist, right?",
                    "answer": "no"
                },
                {
                    "context": "Karen is not a producer. Dorothy is.",
                    "question": "Is Dorothy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Karen is not a producer. Dorothy is.",
                    "question": "Karen is not a producer, right?",
                    "answer": "yes"
                },
                {
                    "context": "Karen is not a producer. Dorothy is.",
                    "question": "Is Karen a producer?",
                    "answer": "no"
                },
                {
                    "context": "Karen is not a producer. Dorothy is.",
                    "question": "Dorothy is not a producer, right?",
                    "answer": "no"
                },
                {
                    "context": "Dorothy is a producer. Karen is not.",
                    "question": "Is Dorothy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Dorothy is a producer. Karen is not.",
                    "question": "Karen is not a producer, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dorothy is a producer. Karen is not.",
                    "question": "Is Karen a producer?",
                    "answer": "no"
                },
                {
                    "context": "Dorothy is a producer. Karen is not.",
                    "question": "Dorothy is not a producer, right?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Negation",
            "test_name": "Negation in question only.",
            "test_name_description": "Test's model's capability to understand negation in question.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability test's a model's ability to handle negation",
            "test_cases": [
                {
                    "context": "Joseph is an artist. Amanda is an organizer.",
                    "question": "Amanda is not an artist, right?",
                    "answer": "yes"
                },
                {
                    "context": "Joseph is an artist. Amanda is an organizer.",
                    "question": "Joseph is not an artist, right?",
                    "answer": "no"
                },
                {
                    "context": "Amanda is an organizer. Joseph is an artist.",
                    "question": "Amanda is not an artist, right?",
                    "answer": "yes"
                },
                {
                    "context": "Amanda is an organizer. Joseph is an artist.",
                    "question": "Joseph is not an artist, right?",
                    "answer": "no"
                },
                {
                    "context": "Christine is a secretary. Charles is an intern.",
                    "question": "Charles is not a secretary, right?",
                    "answer": "yes"
                },
                {
                    "context": "Christine is a secretary. Charles is an intern.",
                    "question": "Christine is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Charles is an intern. Christine is a secretary.",
                    "question": "Charles is not a secretary, right?",
                    "answer": "yes"
                },
                {
                    "context": "Charles is an intern. Christine is a secretary.",
                    "question": "Christine is not a secretary, right?",
                    "answer": "no"
                },
                {
                    "context": "Maria is an actor. Jerry is an author.",
                    "question": "Jerry is not an actor, right?",
                    "answer": "yes"
                },
                {
                    "context": "Maria is an actor. Jerry is an author.",
                    "question": "Maria is not an actor, right?",
                    "answer": "no"
                },
                {
                    "context": "Jerry is an author. Maria is an actor.",
                    "question": "Jerry is not an actor, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is an author. Maria is an actor.",
                    "question": "Maria is not an actor, right?",
                    "answer": "no"
                },
                {
                    "context": "Tony is a historian. Sarah is an advisor.",
                    "question": "Sarah is not a historian, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tony is a historian. Sarah is an advisor.",
                    "question": "Tony is not a historian, right?",
                    "answer": "no"
                },
                {
                    "context": "Sarah is an advisor. Tony is a historian.",
                    "question": "Sarah is not a historian, right?",
                    "answer": "yes"
                },
                {
                    "context": "Sarah is an advisor. Tony is a historian.",
                    "question": "Tony is not a historian, right?",
                    "answer": "no"
                },
                {
                    "context": "Charles is an educator. Jennifer is an accountant.",
                    "question": "Jennifer is not an educator, right?",
                    "answer": "yes"
                },
                {
                    "context": "Charles is an educator. Jennifer is an accountant.",
                    "question": "Charles is not an educator, right?",
                    "answer": "no"
                },
                {
                    "context": "Jennifer is an accountant. Charles is an educator.",
                    "question": "Jennifer is not an educator, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jennifer is an accountant. Charles is an educator.",
                    "question": "Charles is not an educator, right?",
                    "answer": "no"
                }
            ],
            "total_cases": 20
        },
        {
            "test_type": "MFT",
            "capability": "Fairness",
            "test_name": "M/F failure rates should be similar for different professions",
            "test_name_description": "Test's if the model has some bias towards a particular gender (M/F) for different professions.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "This capability test's the model's gender(M/F) or racial bias",
            "test_cases": [
                {
                    "context": "George is not a doctor, Emma is.",
                    "question": "Is Emma a doctor?",
                    "answer": "yes"
                },
                {
                    "context": "Emma is not a doctor, George is.",
                    "question": "Is George a doctor?",
                    "answer": "yes"
                },
                {
                    "context": "Patrick is not a CEO, Ellen is.",
                    "question": "Is Ellen a CEO?",
                    "answer": "yes"
                },
                {
                    "context": "Ellen is not a CEO, Patrick is.",
                    "question": "Is Patrick a CEO?",
                    "answer": "yes"
                },
                {
                    "context": "Scott is not a doctor, Rose is.",
                    "question": "Is Rose a doctor?",
                    "answer": "yes"
                },
                {
                    "context": "Rose is not a doctor, Scott is.",
                    "question": "Is Scott a doctor?",
                    "answer": "yes"
                },
                {
                    "context": "John is not a secretary, Angela is.",
                    "question": "Is Angela a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Angela is not a secretary, John is.",
                    "question": "Is John a secretary?",
                    "answer": "yes"
                },
                {
                    "context": "Patrick is not a CEO, Maria is.",
                    "question": "Is Maria a CEO?",
                    "answer": "yes"
                },
                {
                    "context": "Maria is not a CEO, Patrick is.",
                    "question": "Is Patrick a CEO?",
                    "answer": "yes"
                }
            ],
            "total_cases": 10
        },
        {
            "test_type": "MFT",
            "capability": "Coref",
            "test_name": "Basic coref, he / she",
            "test_name_description": "Test's model's capability to understand he or she",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "Coref (Coreference) Test's model's ability to appropriately understand he / she.",
            "test_cases": [
                {
                    "context": "Peter and Sara are friends. He is an accountant, and she is a model.",
                    "question": "Is Peter an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Peter and Sara are friends. He is an accountant, and she is a model.",
                    "question": "Is Sara a model?",
                    "answer": "yes"
                },
                {
                    "context": "Sara and Peter are friends. He is an accountant, and she is a model.",
                    "question": "Is Peter an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Sara and Peter are friends. He is an accountant, and she is a model.",
                    "question": "Is Sara a model?",
                    "answer": "yes"
                },
                {
                    "context": "Peter and Sara are friends. She is a model, and he is an accountant.",
                    "question": "Is Peter an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Peter and Sara are friends. She is a model, and he is an accountant.",
                    "question": "Is Sara a model?",
                    "answer": "yes"
                },
                {
                    "context": "Sara and Peter are friends. She is a model, and he is an accountant.",
                    "question": "Is Peter an accountant?",
                    "answer": "yes"
                },
                {
                    "context": "Sara and Peter are friends. She is a model, and he is an accountant.",
                    "question": "Is Sara a model?",
                    "answer": "yes"
                },
                {
                    "context": "Carl and Sophie are friends. He is a nurse, and she is an agent.",
                    "question": "Is Carl a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Carl and Sophie are friends. He is a nurse, and she is an agent.",
                    "question": "Is Sophie an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Sophie and Carl are friends. He is a nurse, and she is an agent.",
                    "question": "Is Carl a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Sophie and Carl are friends. He is a nurse, and she is an agent.",
                    "question": "Is Sophie an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Carl and Sophie are friends. She is an agent, and he is a nurse.",
                    "question": "Is Carl a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Carl and Sophie are friends. She is an agent, and he is a nurse.",
                    "question": "Is Sophie an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Sophie and Carl are friends. She is an agent, and he is a nurse.",
                    "question": "Is Carl a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Sophie and Carl are friends. She is an agent, and he is a nurse.",
                    "question": "Is Sophie an agent?",
                    "answer": "yes"
                },
                {
                    "context": "Edward and Harriet are friends. He is an executive, and she is an editor.",
                    "question": "Is Edward an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Edward and Harriet are friends. He is an executive, and she is an editor.",
                    "question": "Is Harriet an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Edward are friends. He is an executive, and she is an editor.",
                    "question": "Is Edward an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Edward are friends. He is an executive, and she is an editor.",
                    "question": "Is Harriet an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Edward and Harriet are friends. She is an editor, and he is an executive.",
                    "question": "Is Edward an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Edward and Harriet are friends. She is an editor, and he is an executive.",
                    "question": "Is Harriet an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Edward are friends. She is an editor, and he is an executive.",
                    "question": "Is Edward an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Edward are friends. She is an editor, and he is an executive.",
                    "question": "Is Harriet an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin and Kathleen are friends. He is an entrepreneur, and she is a nurse.",
                    "question": "Is Kevin an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin and Kathleen are friends. He is an entrepreneur, and she is a nurse.",
                    "question": "Is Kathleen a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Kathleen and Kevin are friends. He is an entrepreneur, and she is a nurse.",
                    "question": "Is Kevin an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Kathleen and Kevin are friends. He is an entrepreneur, and she is a nurse.",
                    "question": "Is Kathleen a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin and Kathleen are friends. She is a nurse, and he is an entrepreneur.",
                    "question": "Is Kevin an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Kevin and Kathleen are friends. She is a nurse, and he is an entrepreneur.",
                    "question": "Is Kathleen a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Kathleen and Kevin are friends. She is a nurse, and he is an entrepreneur.",
                    "question": "Is Kevin an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Kathleen and Kevin are friends. She is a nurse, and he is an entrepreneur.",
                    "question": "Is Kathleen a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Chris and Alison are friends. He is a model, and she is an analyst.",
                    "question": "Is Chris a model?",
                    "answer": "yes"
                },
                {
                    "context": "Chris and Alison are friends. He is a model, and she is an analyst.",
                    "question": "Is Alison an analyst?",
                    "answer": "yes"
                },
                {
                    "context": "Alison and Chris are friends. He is a model, and she is an analyst.",
                    "question": "Is Chris a model?",
                    "answer": "yes"
                },
                {
                    "context": "Alison and Chris are friends. He is a model, and she is an analyst.",
                    "question": "Is Alison an analyst?",
                    "answer": "yes"
                },
                {
                    "context": "Chris and Alison are friends. She is an analyst, and he is a model.",
                    "question": "Is Chris a model?",
                    "answer": "yes"
                },
                {
                    "context": "Chris and Alison are friends. She is an analyst, and he is a model.",
                    "question": "Is Alison an analyst?",
                    "answer": "yes"
                },
                {
                    "context": "Alison and Chris are friends. She is an analyst, and he is a model.",
                    "question": "Is Chris a model?",
                    "answer": "yes"
                },
                {
                    "context": "Alison and Chris are friends. She is an analyst, and he is a model.",
                    "question": "Is Alison an analyst?",
                    "answer": "yes"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Coref",
            "test_name": "Basic coref, his / her",
            "test_name_description": "Test's model's capability to understand his or her.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "Coref (Coreference) Test's model's ability to appropriately understand he / she.",
            "test_cases": [
                {
                    "context": "Christopher and Katherine are friends. His mom is an executive.",
                    "question": "Is Christopher's mom is an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Christopher and Katherine are friends. His mom is an executive.",
                    "question": "Is Katherine's mom is an executive?",
                    "answer": "no"
                },
                {
                    "context": "Katherine and Christopher are friends. His mom is an executive.",
                    "question": "Is Christopher's mom is an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine and Christopher are friends. His mom is an executive.",
                    "question": "Is Katherine's mom is an executive?",
                    "answer": "no"
                },
                {
                    "context": "Jerry and Kathy are friends. His mom is an executive.",
                    "question": "Is Jerry's mom is an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry and Kathy are friends. His mom is an executive.",
                    "question": "Is Kathy's mom is an executive?",
                    "answer": "no"
                },
                {
                    "context": "Kathy and Jerry are friends. His mom is an executive.",
                    "question": "Is Jerry's mom is an executive?",
                    "answer": "yes"
                },
                {
                    "context": "Kathy and Jerry are friends. His mom is an executive.",
                    "question": "Is Kathy's mom is an executive?",
                    "answer": "no"
                },
                {
                    "context": "Paul and Judy are friends. His mom is an analyst.",
                    "question": "Is Paul's mom is an analyst?",
                    "answer": "yes"
                },
                {
                    "context": "Paul and Judy are friends. His mom is an analyst.",
                    "question": "Is Judy's mom is an analyst?",
                    "answer": "no"
                },
                {
                    "context": "Judy and Paul are friends. His mom is an analyst.",
                    "question": "Is Paul's mom is an analyst?",
                    "answer": "yes"
                },
                {
                    "context": "Judy and Paul are friends. His mom is an analyst.",
                    "question": "Is Judy's mom is an analyst?",
                    "answer": "no"
                },
                {
                    "context": "Al and Robin are friends. His mom is an editor.",
                    "question": "Is Al's mom is an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Al and Robin are friends. His mom is an editor.",
                    "question": "Is Robin's mom is an editor?",
                    "answer": "no"
                },
                {
                    "context": "Robin and Al are friends. His mom is an editor.",
                    "question": "Is Al's mom is an editor?",
                    "answer": "yes"
                },
                {
                    "context": "Robin and Al are friends. His mom is an editor.",
                    "question": "Is Robin's mom is an editor?",
                    "answer": "no"
                },
                {
                    "context": "Matt and Rachel are friends. His mom is an intern.",
                    "question": "Is Matt's mom is an intern?",
                    "answer": "yes"
                },
                {
                    "context": "Matt and Rachel are friends. His mom is an intern.",
                    "question": "Is Rachel's mom is an intern?",
                    "answer": "no"
                },
                {
                    "context": "Rachel and Matt are friends. His mom is an intern.",
                    "question": "Is Matt's mom is an intern?",
                    "answer": "yes"
                },
                {
                    "context": "Rachel and Matt are friends. His mom is an intern.",
                    "question": "Is Rachel's mom is an intern?",
                    "answer": "no"
                },
                {
                    "context": "Anthony and Elaine are friends. Her mom is an activist.",
                    "question": "Is Anthony's mom is an activist?",
                    "answer": "no"
                },
                {
                    "context": "Anthony and Elaine are friends. Her mom is an activist.",
                    "question": "Is Elaine's mom is an activist?",
                    "answer": "yes"
                },
                {
                    "context": "Elaine and Anthony are friends. Her mom is an activist.",
                    "question": "Is Anthony's mom is an activist?",
                    "answer": "no"
                },
                {
                    "context": "Elaine and Anthony are friends. Her mom is an activist.",
                    "question": "Is Elaine's mom is an activist?",
                    "answer": "yes"
                },
                {
                    "context": "Jonathan and Stephanie are friends. Her mom is an intern.",
                    "question": "Is Jonathan's mom is an intern?",
                    "answer": "no"
                },
                {
                    "context": "Jonathan and Stephanie are friends. Her mom is an intern.",
                    "question": "Is Stephanie's mom is an intern?",
                    "answer": "yes"
                },
                {
                    "context": "Stephanie and Jonathan are friends. Her mom is an intern.",
                    "question": "Is Jonathan's mom is an intern?",
                    "answer": "no"
                },
                {
                    "context": "Stephanie and Jonathan are friends. Her mom is an intern.",
                    "question": "Is Stephanie's mom is an intern?",
                    "answer": "yes"
                },
                {
                    "context": "Albert and Jean are friends. Her mom is a nurse.",
                    "question": "Is Albert's mom is a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Albert and Jean are friends. Her mom is a nurse.",
                    "question": "Is Jean's mom is a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Jean and Albert are friends. Her mom is a nurse.",
                    "question": "Is Albert's mom is a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Jean and Albert are friends. Her mom is a nurse.",
                    "question": "Is Jean's mom is a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Michael and Kelly are friends. Her mom is a historian.",
                    "question": "Is Michael's mom is a historian?",
                    "answer": "no"
                },
                {
                    "context": "Michael and Kelly are friends. Her mom is a historian.",
                    "question": "Is Kelly's mom is a historian?",
                    "answer": "yes"
                },
                {
                    "context": "Kelly and Michael are friends. Her mom is a historian.",
                    "question": "Is Michael's mom is a historian?",
                    "answer": "no"
                },
                {
                    "context": "Kelly and Michael are friends. Her mom is a historian.",
                    "question": "Is Kelly's mom is a historian?",
                    "answer": "yes"
                },
                {
                    "context": "Keith and Sandra are friends. Her mom is a writer.",
                    "question": "Is Keith's mom is a writer?",
                    "answer": "no"
                },
                {
                    "context": "Keith and Sandra are friends. Her mom is a writer.",
                    "question": "Is Sandra's mom is a writer?",
                    "answer": "yes"
                },
                {
                    "context": "Sandra and Keith are friends. Her mom is a writer.",
                    "question": "Is Keith's mom is a writer?",
                    "answer": "no"
                },
                {
                    "context": "Sandra and Keith are friends. Her mom is a writer.",
                    "question": "Is Sandra's mom is a writer?",
                    "answer": "yes"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "Coref",
            "test_name": "Former / Latter",
            "test_name_description": "Test's model's capability to understand former and latter.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "Coref (Coreference) Test's model's ability to appropriately understand he / she.",
            "test_cases": [
                {
                    "context": "Carolyn and Al are friends. The former is an investor.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Carolyn and Al are friends. The former is an investor.",
                    "question": "Is Al an investor?",
                    "answer": "no"
                },
                {
                    "context": "Al and Carolyn are friends. The latter is an investor.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Al and Carolyn are friends. The latter is an investor.",
                    "question": "Is Al an investor?",
                    "answer": "no"
                },
                {
                    "context": "Carolyn and Al are friends. The former is an investor and the latter is an accountant.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Carolyn and Al are friends. The former is an investor and the latter is an accountant.",
                    "question": "Is Al an investor?",
                    "answer": "no"
                },
                {
                    "context": "Al and Carolyn are friends. The former is an accountant and the latter is an investor.",
                    "question": "Is Carolyn an investor?",
                    "answer": "yes"
                },
                {
                    "context": "Al and Carolyn are friends. The former is an accountant and the latter is an investor.",
                    "question": "Is Al an investor?",
                    "answer": "no"
                },
                {
                    "context": "Michael and Harriet are friends. The former is an entrepreneur.",
                    "question": "Is Michael an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Michael and Harriet are friends. The former is an entrepreneur.",
                    "question": "Is Harriet an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Harriet and Michael are friends. The latter is an entrepreneur.",
                    "question": "Is Michael an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Michael are friends. The latter is an entrepreneur.",
                    "question": "Is Harriet an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Michael and Harriet are friends. The former is an entrepreneur and the latter is a photographer.",
                    "question": "Is Michael an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Michael and Harriet are friends. The former is an entrepreneur and the latter is a photographer.",
                    "question": "Is Harriet an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Harriet and Michael are friends. The former is a photographer and the latter is an entrepreneur.",
                    "question": "Is Michael an entrepreneur?",
                    "answer": "yes"
                },
                {
                    "context": "Harriet and Michael are friends. The former is a photographer and the latter is an entrepreneur.",
                    "question": "Is Harriet an entrepreneur?",
                    "answer": "no"
                },
                {
                    "context": "Kathryn and Dick are friends. The former is a nurse.",
                    "question": "Is Kathryn a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Kathryn and Dick are friends. The former is a nurse.",
                    "question": "Is Dick a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Dick and Kathryn are friends. The latter is a nurse.",
                    "question": "Is Kathryn a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Dick and Kathryn are friends. The latter is a nurse.",
                    "question": "Is Dick a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Kathryn and Dick are friends. The former is a nurse and the latter is a journalist.",
                    "question": "Is Kathryn a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Kathryn and Dick are friends. The former is a nurse and the latter is a journalist.",
                    "question": "Is Dick a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Dick and Kathryn are friends. The former is a journalist and the latter is a nurse.",
                    "question": "Is Kathryn a nurse?",
                    "answer": "yes"
                },
                {
                    "context": "Dick and Kathryn are friends. The former is a journalist and the latter is a nurse.",
                    "question": "Is Dick a nurse?",
                    "answer": "no"
                },
                {
                    "context": "Lucy and Pamela are friends. The former is a producer.",
                    "question": "Is Lucy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Lucy and Pamela are friends. The former is a producer.",
                    "question": "Is Pamela a producer?",
                    "answer": "no"
                },
                {
                    "context": "Pamela and Lucy are friends. The latter is a producer.",
                    "question": "Is Lucy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Pamela and Lucy are friends. The latter is a producer.",
                    "question": "Is Pamela a producer?",
                    "answer": "no"
                },
                {
                    "context": "Lucy and Pamela are friends. The former is a producer and the latter is an accountant.",
                    "question": "Is Lucy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Lucy and Pamela are friends. The former is a producer and the latter is an accountant.",
                    "question": "Is Pamela a producer?",
                    "answer": "no"
                },
                {
                    "context": "Pamela and Lucy are friends. The former is an accountant and the latter is a producer.",
                    "question": "Is Lucy a producer?",
                    "answer": "yes"
                },
                {
                    "context": "Pamela and Lucy are friends. The former is an accountant and the latter is a producer.",
                    "question": "Is Pamela a producer?",
                    "answer": "no"
                }
            ],
            "total_cases": 32
        },
        {
            "test_type": "MFT",
            "capability": "SRL",
            "test_name": "Agent / object distinction",
            "test_name_description": "Test's model's ability to understand distiction between agent and object.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "SRL (Semantic Role Labeling) Test's model's capability to understand different roles such as agents and objects.",
            "test_cases": [
                {
                    "context": "Rachel supports Bruce.",
                    "question": "Rachel supports Bruce, right?",
                    "answer": "yes"
                },
                {
                    "context": "Rachel supports Bruce.",
                    "question": "Is Bruce supported by Rachel?",
                    "answer": "yes"
                },
                {
                    "context": "Rachel supports Bruce.",
                    "question": "Bruce supports Rachel, right?",
                    "answer": "no"
                },
                {
                    "context": "Rachel supports Bruce.",
                    "question": "Is Rachel supported by Bruce?",
                    "answer": "no"
                },
                {
                    "context": "Bruce is supported by Rachel.",
                    "question": "Rachel supports Bruce, right?",
                    "answer": "yes"
                },
                {
                    "context": "Bruce is supported by Rachel.",
                    "question": "Is Bruce supported by Rachel?",
                    "answer": "yes"
                },
                {
                    "context": "Bruce is supported by Rachel.",
                    "question": "Bruce supports Rachel, right?",
                    "answer": "no"
                },
                {
                    "context": "Bruce is supported by Rachel.",
                    "question": "Is Rachel supported by Bruce?",
                    "answer": "no"
                },
                {
                    "context": "Sam likes Annie.",
                    "question": "Sam likes Annie, right?",
                    "answer": "yes"
                },
                {
                    "context": "Sam likes Annie.",
                    "question": "Is Annie liked by Sam?",
                    "answer": "yes"
                },
                {
                    "context": "Sam likes Annie.",
                    "question": "Annie likes Sam, right?",
                    "answer": "no"
                },
                {
                    "context": "Sam likes Annie.",
                    "question": "Is Sam liked by Annie?",
                    "answer": "no"
                },
                {
                    "context": "Annie is liked by Sam.",
                    "question": "Sam likes Annie, right?",
                    "answer": "yes"
                },
                {
                    "context": "Annie is liked by Sam.",
                    "question": "Is Annie liked by Sam?",
                    "answer": "yes"
                },
                {
                    "context": "Annie is liked by Sam.",
                    "question": "Annie likes Sam, right?",
                    "answer": "no"
                },
                {
                    "context": "Annie is liked by Sam.",
                    "question": "Is Sam liked by Annie?",
                    "answer": "no"
                },
                {
                    "context": "Andrea follows Dick.",
                    "question": "Andrea follows Dick, right?",
                    "answer": "yes"
                },
                {
                    "context": "Andrea follows Dick.",
                    "question": "Is Dick followed by Andrea?",
                    "answer": "yes"
                },
                {
                    "context": "Andrea follows Dick.",
                    "question": "Dick follows Andrea, right?",
                    "answer": "no"
                },
                {
                    "context": "Andrea follows Dick.",
                    "question": "Is Andrea followed by Dick?",
                    "answer": "no"
                },
                {
                    "context": "Dick is followed by Andrea.",
                    "question": "Andrea follows Dick, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dick is followed by Andrea.",
                    "question": "Is Dick followed by Andrea?",
                    "answer": "yes"
                },
                {
                    "context": "Dick is followed by Andrea.",
                    "question": "Dick follows Andrea, right?",
                    "answer": "no"
                },
                {
                    "context": "Dick is followed by Andrea.",
                    "question": "Is Andrea followed by Dick?",
                    "answer": "no"
                },
                {
                    "context": "Tony loves Steven.",
                    "question": "Tony loves Steven, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tony loves Steven.",
                    "question": "Is Steven loved by Tony?",
                    "answer": "yes"
                },
                {
                    "context": "Tony loves Steven.",
                    "question": "Steven loves Tony, right?",
                    "answer": "no"
                },
                {
                    "context": "Tony loves Steven.",
                    "question": "Is Tony loved by Steven?",
                    "answer": "no"
                },
                {
                    "context": "Steven is loved by Tony.",
                    "question": "Tony loves Steven, right?",
                    "answer": "yes"
                },
                {
                    "context": "Steven is loved by Tony.",
                    "question": "Is Steven loved by Tony?",
                    "answer": "yes"
                },
                {
                    "context": "Steven is loved by Tony.",
                    "question": "Steven loves Tony, right?",
                    "answer": "no"
                },
                {
                    "context": "Steven is loved by Tony.",
                    "question": "Is Tony loved by Steven?",
                    "answer": "no"
                },
                {
                    "context": "Bob accepts Simon.",
                    "question": "Bob accepts Simon, right?",
                    "answer": "yes"
                },
                {
                    "context": "Bob accepts Simon.",
                    "question": "Is Simon accepted by Bob?",
                    "answer": "yes"
                },
                {
                    "context": "Bob accepts Simon.",
                    "question": "Simon accepts Bob, right?",
                    "answer": "no"
                },
                {
                    "context": "Bob accepts Simon.",
                    "question": "Is Bob accepted by Simon?",
                    "answer": "no"
                },
                {
                    "context": "Simon is accepted by Bob.",
                    "question": "Bob accepts Simon, right?",
                    "answer": "yes"
                },
                {
                    "context": "Simon is accepted by Bob.",
                    "question": "Is Simon accepted by Bob?",
                    "answer": "yes"
                },
                {
                    "context": "Simon is accepted by Bob.",
                    "question": "Simon accepts Bob, right?",
                    "answer": "no"
                },
                {
                    "context": "Simon is accepted by Bob.",
                    "question": "Is Bob accepted by Simon?",
                    "answer": "no"
                }
            ],
            "total_cases": 40
        },
        {
            "test_type": "MFT",
            "capability": "SRL",
            "test_name": "Agent / object distinction with 3 agents",
            "test_name_description": "Test's model's capability to understand agents or object in case of three agents.",
            "test_type_description": "MFT stands for Minimum Functionality Test. This testing type is inspired from unit testing of software engineering. For this type of testing precise and small testing datasets are created and the models are tested on that particular test set. MFTs are useful particularly for detecting when models use alternative approaches to handle complicated inputs without actually knowing the inside out of the capability. For MFT test cases, labeled test set is required.",
            "capability_description": "SRL (Semantic Role Labeling) Test's model's capability to understand different roles such as agents and objects.",
            "test_cases": [
                {
                    "context": "Jill believes Ralph. Ralph believes Ken.",
                    "question": "Jill believes Ralph, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ralph believes Ken.",
                    "question": "Ralph believes Ken, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ralph believes Ken.",
                    "question": "Is Ralph believed by Jill?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ralph believes Ken.",
                    "question": "Is Ken believed by Ralph?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ken is believed by Ralph.",
                    "question": "Jill believes Ralph, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ken is believed by Ralph.",
                    "question": "Ralph believes Ken, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ken is believed by Ralph.",
                    "question": "Is Ralph believed by Jill?",
                    "answer": "yes"
                },
                {
                    "context": "Jill believes Ralph. Ken is believed by Ralph.",
                    "question": "Is Ken believed by Ralph?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ralph believes Ken.",
                    "question": "Jill believes Ralph, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ralph believes Ken.",
                    "question": "Ralph believes Ken, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ralph believes Ken.",
                    "question": "Is Ralph believed by Jill?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ralph believes Ken.",
                    "question": "Is Ken believed by Ralph?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ken is believed by Ralph.",
                    "question": "Jill believes Ralph, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ken is believed by Ralph.",
                    "question": "Ralph believes Ken, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ken is believed by Ralph.",
                    "question": "Is Ralph believed by Jill?",
                    "answer": "yes"
                },
                {
                    "context": "Ralph is believed by Jill. Ken is believed by Ralph.",
                    "question": "Is Ken believed by Ralph?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Jean blames Harold.",
                    "question": "Dick blames Jean, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Jean blames Harold.",
                    "question": "Jean blames Harold, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Jean blames Harold.",
                    "question": "Is Jean blamed by Dick?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Jean blames Harold.",
                    "question": "Is Harold blamed by Jean?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Harold is blamed by Jean.",
                    "question": "Dick blames Jean, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Harold is blamed by Jean.",
                    "question": "Jean blames Harold, right?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Harold is blamed by Jean.",
                    "question": "Is Jean blamed by Dick?",
                    "answer": "yes"
                },
                {
                    "context": "Dick blames Jean. Harold is blamed by Jean.",
                    "question": "Is Harold blamed by Jean?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Jean blames Harold.",
                    "question": "Dick blames Jean, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Jean blames Harold.",
                    "question": "Jean blames Harold, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Jean blames Harold.",
                    "question": "Is Jean blamed by Dick?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Jean blames Harold.",
                    "question": "Is Harold blamed by Jean?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Harold is blamed by Jean.",
                    "question": "Dick blames Jean, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Harold is blamed by Jean.",
                    "question": "Jean blames Harold, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Harold is blamed by Jean.",
                    "question": "Is Jean blamed by Dick?",
                    "answer": "yes"
                },
                {
                    "context": "Jean is blamed by Dick. Harold is blamed by Jean.",
                    "question": "Is Harold blamed by Jean?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Victoria likes Kathryn.",
                    "question": "Tim likes Victoria, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Victoria likes Kathryn.",
                    "question": "Victoria likes Kathryn, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Victoria likes Kathryn.",
                    "question": "Is Victoria liked by Tim?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Victoria likes Kathryn.",
                    "question": "Is Kathryn liked by Victoria?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Kathryn is liked by Victoria.",
                    "question": "Tim likes Victoria, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Kathryn is liked by Victoria.",
                    "question": "Victoria likes Kathryn, right?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Kathryn is liked by Victoria.",
                    "question": "Is Victoria liked by Tim?",
                    "answer": "yes"
                },
                {
                    "context": "Tim likes Victoria. Kathryn is liked by Victoria.",
                    "question": "Is Kathryn liked by Victoria?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Victoria likes Kathryn.",
                    "question": "Tim likes Victoria, right?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Victoria likes Kathryn.",
                    "question": "Victoria likes Kathryn, right?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Victoria likes Kathryn.",
                    "question": "Is Victoria liked by Tim?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Victoria likes Kathryn.",
                    "question": "Is Kathryn liked by Victoria?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Kathryn is liked by Victoria.",
                    "question": "Tim likes Victoria, right?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Kathryn is liked by Victoria.",
                    "question": "Victoria likes Kathryn, right?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Kathryn is liked by Victoria.",
                    "question": "Is Victoria liked by Tim?",
                    "answer": "yes"
                },
                {
                    "context": "Victoria is liked by Tim. Kathryn is liked by Victoria.",
                    "question": "Is Kathryn liked by Victoria?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jerry notices Jill.",
                    "question": "Ben notices Jerry, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jerry notices Jill.",
                    "question": "Jerry notices Jill, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jerry notices Jill.",
                    "question": "Is Jerry noticed by Ben?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jerry notices Jill.",
                    "question": "Is Jill noticed by Jerry?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jill is noticed by Jerry.",
                    "question": "Ben notices Jerry, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jill is noticed by Jerry.",
                    "question": "Jerry notices Jill, right?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jill is noticed by Jerry.",
                    "question": "Is Jerry noticed by Ben?",
                    "answer": "yes"
                },
                {
                    "context": "Ben notices Jerry. Jill is noticed by Jerry.",
                    "question": "Is Jill noticed by Jerry?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jerry notices Jill.",
                    "question": "Ben notices Jerry, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jerry notices Jill.",
                    "question": "Jerry notices Jill, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jerry notices Jill.",
                    "question": "Is Jerry noticed by Ben?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jerry notices Jill.",
                    "question": "Is Jill noticed by Jerry?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jill is noticed by Jerry.",
                    "question": "Ben notices Jerry, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jill is noticed by Jerry.",
                    "question": "Jerry notices Jill, right?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jill is noticed by Jerry.",
                    "question": "Is Jerry noticed by Ben?",
                    "answer": "yes"
                },
                {
                    "context": "Jerry is noticed by Ben. Jill is noticed by Jerry.",
                    "question": "Is Jill noticed by Jerry?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Joe likes Alice.",
                    "question": "Katherine likes Joe, right?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Joe likes Alice.",
                    "question": "Joe likes Alice, right?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Joe likes Alice.",
                    "question": "Is Joe liked by Katherine?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Joe likes Alice.",
                    "question": "Is Alice liked by Joe?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Alice is liked by Joe.",
                    "question": "Katherine likes Joe, right?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Alice is liked by Joe.",
                    "question": "Joe likes Alice, right?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Alice is liked by Joe.",
                    "question": "Is Joe liked by Katherine?",
                    "answer": "yes"
                },
                {
                    "context": "Katherine likes Joe. Alice is liked by Joe.",
                    "question": "Is Alice liked by Joe?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Joe likes Alice.",
                    "question": "Katherine likes Joe, right?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Joe likes Alice.",
                    "question": "Joe likes Alice, right?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Joe likes Alice.",
                    "question": "Is Joe liked by Katherine?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Joe likes Alice.",
                    "question": "Is Alice liked by Joe?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Alice is liked by Joe.",
                    "question": "Katherine likes Joe, right?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Alice is liked by Joe.",
                    "question": "Joe likes Alice, right?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Alice is liked by Joe.",
                    "question": "Is Joe liked by Katherine?",
                    "answer": "yes"
                },
                {
                    "context": "Joe is liked by Katherine. Alice is liked by Joe.",
                    "question": "Is Alice liked by Joe?",
                    "answer": "yes"
                }
            ],
            "total_cases": 80
        }
    ]
}