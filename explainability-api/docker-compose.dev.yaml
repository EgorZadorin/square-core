# only for dev work

version: "3.3"

services:
  traefik:
    image: traefik:v2.6.1
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --accesslog=true
      - --accesslog.format=json
      - --accesslog.filepath=/var/log/traefik/access.log.json
      # Enable https port 443
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.le.acme.tlschallenge=true
      # Uncomment staging certs for testing
      - --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.le.acme.email=sachdeva@ukp.informatik.tu-darmstadt.de
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      # Enable dashboard and logging
      - --api.dashboard=true
      - --log.level=DEBUG
    ports:
      - "8989:80"  # http port
      - "8443:443"  # https port
      - "8080:8080"  # web UI port
    labels:
      - "traefik.enable=true"
      # Global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=https-redirect"

      # Middleware redirect from HTTP to HTTPS
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.port=8443"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # mount volume to store certificates
      - traefik-public-certificates:/certificates

  rabbit:
    hostname: rabbit
    image: rabbitmq:3.9.14-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=ukp
    env_file:
      - .env
#    volumes:
#      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
#      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

  redishost:
    hostname: redishost
    image: redis:latest
    ports:
      - '6379:6379'
    command: ["redis-server", "--appendonly yes", "--requirepass ${REDIS_PASSWORD}"]
    env_file:
      - .env
#    volumes:
#      - square-redis-data:/square/redis/data:rw
#      - ./redis/redis.conf:/etc/redis/redis.conf

  celeryworker:
#    image: ukpsquare/square-explainability:latest
    build:
      context: ./
      dockerfile: celeryworker.dockerfile
    volumes:
      - ./:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - DOCKER_HOST_URL=https://square.ukp-lab.de
      - VERIFY_SSL=0
      - KEYCLOAK_BASE_URL=https://square.ukp-lab.de
      - REALM=square-testing
      - CLIENT_ID=models
    links:
      - rabbit
      - redishost
    depends_on:
      - rabbit
      - redishost

  explainability:
    #    image: ukpsquare/square-explainability:latest
    build:
      context: ./
      dockerfile: backend.dockerfile
    volumes:
      - ./:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - DOCKER_HOST_URL=https://square.ukp-lab.de
      - VERIFY_SSL=0
      - KEYCLOAK_BASE_URL=https://square.ukp-lab.de
      - REALM=square-testing
      - CLIENT_ID=models
    links:
      - rabbit
      - redishost
    depends_on:
      - rabbit
      - redishost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.explainability.rule=PathPrefix(`/api/explain`)"
      - "traefik.http.routers.explainability.entrypoints=websecure"
      - "traefik.http.routers.explainability.tls=true"
      - "traefik.http.routers.explainability.tls.certresolver=le"
      - "traefik.http.routers.explainability.middlewares=explainability-stripprefix,explainability-addprefix"
      - "traefik.http.middlewares.explainability-stripprefix.stripPrefixRegex.regex=/api/[a-zA-Z0-9_-]+"
      - "traefik.http.middlewares.explainability-addprefix.addPrefix.prefix=/api"

  mongo:
    hostname: mongo
    image: mongo:5.0.4
    restart: always
    volumes:
      - mongo-data:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_HOST: mongo
      MONGO_PORT: 27017
    env_file:
      - .env

  mongo-express:
    image: mongo-express:latest
    restart: always
    env_file:
      - .env
    ports:
      - 8081:8081

volumes:
  traefik-public-certificates:

  mongo-data:
    driver: local

#  square-redis-data:
#    driver: local
